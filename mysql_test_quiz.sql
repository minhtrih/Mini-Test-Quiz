-- MySQL dump 10.13  Distrib 8.0.12, for macos10.13 (x86_64)
--
-- Host: localhost    Database: test_quiz
-- ------------------------------------------------------
-- Server version	8.0.12

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
 SET NAMES utf8 ;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `language`
--

DROP TABLE IF EXISTS `language`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `language` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `language` varchar(64) COLLATE utf8mb4_unicode_ci NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `language`
--

LOCK TABLES `language` WRITE;
/*!40000 ALTER TABLE `language` DISABLE KEYS */;
INSERT INTO `language` VALUES (1,'PHP'),(2,'Perl'),(3,'C'),(4,'C++'),(5,'Java'),(6,'Python'),(7,'PostgreSQL');
/*!40000 ALTER TABLE `language` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `question`
--

DROP TABLE IF EXISTS `question`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `question` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `question` varchar(2048) NOT NULL,
  `correct` char(1) NOT NULL,
  `answera` varchar(256) DEFAULT NULL,
  `answerb` varchar(256) DEFAULT NULL,
  `answerc` varchar(256) DEFAULT NULL,
  `answerd` varchar(256) DEFAULT NULL,
  `answere` varchar(256) DEFAULT NULL,
  `description` varchar(2048) NOT NULL,
  `code` text,
  `keyword` varchar(64) DEFAULT NULL,
  `language` tinyint(3) unsigned NOT NULL,
  `order` bigint(20) unsigned DEFAULT NULL,
  `asked` bigint(20) unsigned DEFAULT '0',
  `answered` bigint(20) unsigned DEFAULT '0',
  `nextqid` int(11) NOT NULL,
  `author` varchar(255) DEFAULT NULL,
  `userid` int(11) NOT NULL DEFAULT '3',
  PRIMARY KEY (`id`),
  KEY `order` (`order`)
) ENGINE=InnoDB AUTO_INCREMENT=428 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `question`
--

LOCK TABLES `question` WRITE;
/*!40000 ALTER TABLE `question` DISABLE KEYS */;
INSERT INTO `question` VALUES (1,'What does PHP stand for?','c','Preprocessed Hypertext Page','Hypertext Markup Language','PHP: Hypertext Preprocessor','Hypertext Transfer Protocol',NULL,'The name PHP is a recursive initialism for PHP: Hypertext Preprocessor.',NULL,'The language',1,1,71380,60400,2,'Alexander Saydakov',3),(2,'What value is printed for \"a\" below','d','1','2','3','no value',NULL,'In order to reference a global variable from a function the \"global\" keyword must be used inside the function','&lt;?php\r\n\r\n    $a = 1;\r\n\r\n    function Test()\r\n    {\r\n        echo \"a = $a\";\r\n    }\r\n    Test();\r\n?&gt;\r\n','global variables',1,2,42192,25827,3,'Alexander Saydakov',3),(3,'What will be printed by the code below?','a','HELLO WORLD!','nothing','its a compiler error, the code won\'t run','hello world!',NULL,'User defined functions and language keywords are case in-sensitive','&lt;?php\r\n\r\n    FUNCTION TEST()\r\n    {\r\n        ECHO \"HELLO WORLD!\\n\";\r\n    }\r\n\r\n    test();\r\n?&gt;','case sensitivity',1,3,40104,24695,4,'Alexander Saydakov',3),(4,'Which of the following is the way to create comments in PHP?','d','// commented code to end of line','/*    commented code here  */','# commented code to end of line','all of the above',NULL,'All three are valid.  They are borrowed from C, C++, and shell coding.',NULL,'comments',1,4,38330,22054,5,'Alexander Saydakov',3),(5,'A value that has no defined value is expressed in PHP with the following keyword:','b','undef','null','None','There is no such concept in PHP',NULL,'The case insensitive keyword NULL is used in PHP for no defined value.',NULL,'undefined values',1,5,32697,21174,124,'Alexander Saydakov',3),(6,'What will be printed by the code below?','b','SCALAR','empty value','STRING','\"not a reference\"',NULL,'ref(EXPR) returns FALSE if EXPR is not a reference, which is printed as empty value','my $val = \'x\';\r\n\r\nprint ref($val);','references',2,1,22520,12948,10,'Alexander Saydakov',3),(7,'The code below declares and defines variable x','b','true','false',NULL,NULL,NULL,'An extern declaration does not define the variable unless it is also initialized in the same statement','extern int x;','extern',4,1,122587,95699,8,'Ivan Novick',3),(8,'non-const static member variables must be defined outside of the class for them to be used','a','true','false',NULL,NULL,NULL,'The declaration of a static data member in a class does not define it.','struct test\r\n{\r\n    static int x;\r\n};\r\n\r\nint test::x;','static class members',4,2,46280,29952,9,'Ivan Novick',3),(9,'What is the value of the local variable x at the end of main?','c','0','5','undefined',NULL,NULL,'The local x in main hides the global x before the local x\'s initializer is considered.  Therefore the local x is being initialized with itself (the local unitialized variable)','int x = 5;\r\nint main(int argc, char** argv)\r\n{\r\n    int x = x;\r\n    return 0;\r\n}\r\n','point of declaration',4,3,67449,39139,12,'Ivan Novick',3),(10,'What will be printed by the code below?','c','empty value','ARRAY','HASH','SCALAR','true','ref(EXPR) returns \'HASH\' if EXPR is a reference to a hash','my $val = {};\r\n\r\nprint ref($val);','references',2,2,12555,6948,11,'Alexander Saydakov',3),(11,'What will be printed by the code below?','d','0','1','2','3','0 1 2','assigning an array in scalar context evaluates to the number of elements in the array','my @a = (0, 1, 2);\r\nmy $b = @a;\r\n\r\nprint $b;','context',2,3,14296,8509,16,'Alexander Saydakov',3),(12,'What is the value of y at the end of main?','b','0','5','20','undefined',NULL,'The local x does not hide the global x until the end of the declaration. A local name will hide a global after the end of the declaration but before the beginning of initialization.','const int x = 5;\r\nint main(int argc, char** argv)\r\n{\r\n    int x[x];\r\n\r\n    int y = sizeof(x) / sizeof(int);\r\n\r\n    return 0;\r\n}','point of declaration',4,4,67502,35461,13,'Ivan Novick',3),(13,'The below is legal','a','true','false',NULL,NULL,NULL,'You can have a class and a regular variable with the same name.  However the class name will been hidden and the elaborated-type-specfier must be used to access the class name. ','int x = 5;\r\n\r\nclass x\r\n{\r\n};\r\n\r\nint main(int argc, char** argv)\r\n{\r\n    class x y;\r\n\r\n    return 0;\r\n}','declarative regions and scope',4,5,44428,23290,14,'Ivan Novick',3),(14,'The code below is legal?','b','true','false',NULL,NULL,NULL,'A template class name can not be the same as any other name in the same declarative region.  This is also the case for typedef names.','int x = 5;\r\n\r\ntemplate &lt;typename T&gt;\r\nclass x\r\n{\r\n    T member;\r\n};\r\n\r\nint main(int argc, char** argv)\r\n{\r\n    class x&lt;int&gt; y;\r\n\r\n    return 0;\r\n}','declarative regions and scope',4,6,34997,16644,15,'Ivan Novick',3),(15,'Which of the following variables can be accessed in foo\'s function try block handler?','b','x and y and e','x and e','y and e','e',NULL,'Function parameters are accessible in the try handler.  Function local variables are NOT accessible in the try handler.','void foo(int x) try\r\n{\r\n    int y = 2;\r\n    throw 1;\r\n}\r\ncatch(int e)\r\n{\r\n}\r\n\r\nint main(int argc, char** argv)\r\n{\r\n    foo(3);\r\n    return 0;\r\n}','scope exceptions',4,7,46137,22842,17,'Ivan Novick',3),(16,'What will be printed by the code below?','a','0','1','2','3','0 1 2','assignment is in list context, so $b will get the first element of the array','my @a = (0, 1, 2);\r\nmy ($b) = @a;\r\n\r\nprint $b;','context',2,4,13039,7172,30,'Alexander Saydakov',3),(17,'Given the code below, the variable y can be accessed in which blocks of code?','d','lines 4-15','lines 4-17','lines 8-11','lines 8-15','lines 8-17','The variable declared in the else-if did not exist before its declaration and can not be used after the end of the else clause.  Variables declared in conditions of if,else-if,else structures can be used in all subsequent conditions and bodies of the if,else-if,else structure.','1  int main(int argc, char** argv)\r\n2  {\r\n3\r\n4   if ( argc > 10 )\r\n5   {\r\n6\r\n7   }\r\n8   else if (int y = argc - 1 )\r\n9   {\r\n10\r\n11  }\r\n12  else\r\n13  {\r\n14\r\n15  }\r\n16\r\n17  return 0;\r\n18  }','scope if',4,8,49299,22873,18,'Ivan Novick',3),(18,'The variable x is accesible in the else clause of this program?','b','true','false',NULL,NULL,NULL,'Variables declared in blocks of if,else-if,else are local to the block they were declared in.','int main(int argc, char** argv)\r\n{\r\n    if ( argc > 2 )\r\n    {\r\n        int x = 5;\r\n    }\r\n    else\r\n    {\r\n  \r\n    }\r\n\r\n    return 0;\r\n}','scope if',4,9,25951,21590,19,'Ivan Novick',3),(19,'From line 6 in the code below which labels can you access using a goto statement?','b','a, b, c, d','a, b, c','b, c','b, c, d',NULL,'Labels have function scope.  This means they can be accessed from anywhere within the function where they are defined but not in any other function of the program. Labels are the only construct in C++ with function scope.','1\r\n2\r\n3  void foo(int x)\r\n4  {\r\n5  pointa:\r\n6     \r\n7  pointb:\r\n8         \r\n9  pointc:\r\n10     printf(\"end of function\\n\");\r\n11 }   \r\n12     \r\n13 int main(int argc, char** argv)\r\n14 {   \r\n15     foo(5);\r\n16     \r\n17 pointd:\r\n18 \r\n19     return 0;\r\n20 }','scope labels',4,10,34065,19065,20,'Ivan Novick',3),(20,'What value does size print out?','c','5','3','undefined',NULL,NULL,'3.3.6/3 says if reordering member declarations in a class yields an alternate valid program the program is ill-formed.  In this case the enum SIZE is not in scope when array is declared making the array size 5.  However if the members were reordered to declare array after the definition of the enum the array size would be 3.  Thus since reordering member declaration changes the program, it is undefined.','#include &lt;iostream&gt;\r\n\r\nconst int SIZE = 5;\r\n\r\nstruct tester\r\n{\r\n    int array[SIZE];\r\n\r\n    enum \r\n    {\r\n        SIZE = 3\r\n    };\r\n\r\n    void size()\r\n    {\r\n        std::cout << sizeof(array) / sizeof(int);\r\n    }\r\n};\r\n\r\nint main(int argc, char** argv)\r\n{\r\n    tester t;\r\n    t.size();\r\n    return 0;\r\n}','class scope',4,11,36420,15050,21,'Ivan Novick',3),(21,'What value does foo print out?','b','5','3','undefined',NULL,NULL,'Names defined at any point in a class are in scope in all member functions of the class.  Thus the enum SIZE is in scope in the function foo and hides the global variable SIZE.','#include &lt;iostream&gt;\r\n\r\nconst int SIZE = 5;\r\n\r\nstruct tester\r\n{\r\n    void foo()\r\n    {\r\n        std::cout << SIZE << std::endl;\r\n    }\r\n\r\n    enum \r\n    {\r\n        SIZE = 3\r\n    };\r\n};\r\n\r\nint main(int argc, char** argv)\r\n{\r\n    tester t;\r\n    t.foo();\r\n    return 0;\r\n}','class scope',4,12,28475,15350,22,'Ivan Novick',3),(22,'In namespace foo, the function bar can access the variable x also declared in namespace foo?','b','true','false',NULL,NULL,NULL,'Names used in a namespace must be declared before before their use','#include &lt;iostream&gt;\r\n\r\nnamespace foo\r\n{\r\n    void bar()\r\n    {\r\n        x++;\r\n    }\r\n\r\n    int x;\r\n}\r\n\r\nint main(int argc, char** argv)\r\n{\r\n    return 0;\r\n}','name lookup namespaces',4,13,21310,12180,23,'Ivan Novick',3),(23,'What value for y gets printed in the program below?','b','12','13','undefined',NULL,NULL,'An Enumeration\'s point of declaration is after its definition (which includes the initialization).   Therefore in this case the value of the enum \'x\' is initialized with the global \'x\' which equals 12.','#include &lt;iostream&gt;\r\n\r\nconst int x = 12;\r\n\r\nint main(int argc, char** argv)\r\n{\r\n    enum dog\r\n    {\r\n        x = x,\r\n        y\r\n    };\r\n\r\n    std::cout << y << std::endl;\r\n\r\n    return 0;\r\n}','point of declaration enums',4,14,25000,14433,24,'Ivan Novick',3),(24,'Which of the following functions are found when called in main during name lookup?','a','foo','bar','foo and bar','neither',NULL,'This is called koenig lookup or argument dependent name lookup. In this case, the namespace \'standards\' is searched for a function \'foo\' because its argument \'ds\' is defined in that namespace.  For function \'bar\', no additional namespaces are searched and the name is not found.  More details are in 3.4.2.','#include &lt;iostream&gt;\r\n\r\nnamespace standards\r\n{\r\n    struct datastructure\r\n    {\r\n    };\r\n\r\n    void foo(const datastructure& ds)\r\n    {\r\n    }\r\n\r\n    void bar()\r\n    {\r\n    }\r\n}\r\n\r\nint main(int argc, char** argv)\r\n{\r\n    standards::datastructure ds;\r\n\r\n    foo(ds);\r\n\r\n    bar();\r\n\r\n    return 0;\r\n}','Koenig ADL',4,15,26100,11889,25,'Ivan Novick',3),(25,'Of the variable definitions below, which ones have external linkage and can be accessed from another translation unit?','c','w, x, y and z','w, y and z','w and z','y and z','none','w has external linkage.  x has internal linkage.  y has internal linkage.  z has external linkage','int w = 1;\r\nstatic int x = 2;\r\nconst int y = 3;\r\nextern const int z = 4;\r\n\r\nint main(int argc, char** argv)\r\n{\r\n    return 0;\r\n}','linkage',4,16,25451,11144,26,'Ivan Novick',3),(26,'What value is printed out for the variable x?','b','undefined','zero',NULL,NULL,NULL,'variables with static storage duration are zero initialized.  Note that x has static storage duration even though the static keyword is not used.  According to the standard: &quot;All objects which do not have dynamic storage duration, do not have thread storage duration, and are not local have static storage duration&quot;','#include &lt;iostream&gt;\r\n\r\nint x;\r\n\r\nint main()\r\n{\r\n    int y;\r\n    std::cout << x << std::endl;\r\n    std::cout << y << std::endl;\r\n    return 0;\r\n} ','static storage',4,17,17953,10827,27,'Ivan Novick',3),(27,'True or false?  Every expression is an lvalue or an rvalue?','a','true','false',NULL,NULL,NULL,'Its true, see Standard 3.10/1',NULL,'lvalue rvalue',4,18,16782,11645,28,'Ivan Novick',3),(28,'Which of the following lines should NOT compile?','c','8, 10, 12, 14','8, 12','12, 14','none',NULL,'Arrays can be implicity converted to pointers without casting -- 4.2.  There is no implicit conversion from pointers to arrays.','1 \r\n2 int main()\r\n3 {\r\n4     int a[54] = {};\r\n5 \r\n6     int b[54] = {};\r\n7 \r\n8     int* x = a;\r\n9 \r\n10    int* const y = a;\r\n11 \r\n12    b = x;\r\n13 \r\n14    b = y;\r\n15 \r\n16    return 0;\r\n17 } ','standard conversions',4,19,21244,13425,29,'Ivan Novick',3),(29,'Which of the following lines should NOT compile?','c','7 and 9','7','9','none',NULL,'<code>int*</code> can be implicity converted to <code>int const*</code> -- 4.4.  There is no implicit conversion from <code>int const*</code> to <code>int*</code>.','1 int main()\r\n2 {\r\n3     int a = 2;\r\n4 \r\n5     int* b = &a;\r\n6 \r\n7     int const* c = b;\r\n8 \r\n9     b = c;\r\n10 \r\n11    return 0;\r\n12 } ','standard conversions',4,20,21961,12259,33,'Ivan Novick',3),(30,'What will be printed by the code below?','e','true','HASH','object reference','1','MyClass','ref(EXPR) returns a class name if EXPR is a blessed reference','my $val = bless {}, \'MyClass\';\r\n\r\nprint ref($val);','references',2,5,11028,6430,31,'Alexander Saydakov',3),(31,'What will be the value of $1 after execution of the following code','a','Perl','I','I am learning Perl','undef','empty string','this regular expression matches the last word','my $txt = \'I am learning Perl\';                    \r\n\r\n$txt =~ /(\\w+)$/;','regex',2,6,12307,6965,32,'Alexander Saydakov',3),(32,'What part of the string will be assigned to $match in the following code','a','am learning','I am learning Perl','learning','am','none','this will match everything from the first whitespace character to the last one','my $txt = \'I am learning Perl\';\r\n\r\nmy ($match) = $txt =~ /\\s(.*)\\s/;','regex',2,7,12452,6586,38,'Alexander Saydakov',3),(33,'A function call is always an rvalue.  True or false?','b','true','false',NULL,NULL,NULL,'A function call can be an lvalue if and only if the return value is a reference ',NULL,'lvalue rvalue',4,21,15546,9843,34,'Ivan Novick',3),(34,'What value should be printed for x?','d','0','3','undefined','won\'t compile',NULL,'<code>int()</code> creates a temporary variable which is an rvalue.  The temporary variable that is created can not be assigned to since it is an rvalue. Thus this code should not compile','#include &lt;iostream&gt;\r\n\r\nint main()\r\n{\r\n    int x = int() = 3;\r\n\r\n    std::cout << x << std::endl;\r\n\r\n    return 0;\r\n}','temporaries',4,22,17060,10748,35,'Ivan Novick',3),(35,'Which lines of code below should not compile?','e','14','14,15,18','14,17,18','14,15,17,18','14,15,16,18','Only reinterpret_cast can be used to convert a pointer to an object to a pointer to an unrelated object type.  The dynamic cast would fail at run-time, however on most compilers it will also fail to compile because there are no virtual functions in the class of the pointer being casted.','1  struct Foo\r\n2  {\r\n3  };\r\n4 \r\n5  struct Bar\r\n6  {\r\n7  };\r\n8 \r\n9 \r\n10 int main()\r\n11 {\r\n12     Foo* f = new Foo;\r\n13 \r\n14     Bar* b1 = f;\r\n15     Bar* b2 = static_cast&lt;Bar*&gt;(f);\r\n16     Bar* b3 = dynamic_cast&lt;Bar*&gt;(f);\r\n17     Bar* b4 = reinterpret_cast&lt;Bar*&gt;(f);\r\n18     Bar* b5 = const_cast&lt;Bar*&gt;(f);\r\n19 \r\n20     return 0;\r\n21 }\r\n','cast',4,23,19521,10345,36,'Ivan Novick',3),(36,'In addition to const_cast, which cast can be used to cast away constness?','d','static_cast','dynamic_cast','reinterpret_cast','none of the above',NULL,'Only const_cast (or c-style casts) can be used to cast away constness ',NULL,'cast',4,24,17556,9549,37,'Ivan Novick',3),(37,'In addition to c-style, which casts can be used to cast an int into an enum?','a','static_cast','dynamic_cast','reinterpret_cast','static_cast or reinterpret_cast','none of the above','Only static_cast (or c-style casts) can be used to cast an int to an enum',NULL,'cast',4,25,18716,8723,39,'Ivan Novick',3),(38,'What will be the value of $1 after execution of the following code','c','none','I am learning Perl','I am learning','I','learning','this is a greedy match of any  characters to the last whitespace character','my $txt = \'I am learning Perl\';\r\n\r\n$txt =~ /(.*)\\s/;','regex',2,8,10038,6207,76,'Alexander Saydakov',3),(39,'In addition to c-style, which casts can be used to cast an int to a pointer or a pointer to an int?','c','static_cast','dynamic_cast','reinterpret_cast','static_cast or dynamic_cast','none of the above','Only reinterpret_cast (or c-style casts) can be used to cast an int to a pointer or a pointer to an int',NULL,'cast',4,26,19608,8333,40,'Ivan Novick',3),(40,'Which lines of code below should cause the program to be undefined?','d','none','13','15','18','20','deleting NULL pointers have no effect.  deleting a pointer to a base class which points to a derived object is legal assuming the base destructor is virtual. deleting an array of objects using a base class pointer is undefined.',' 1 struct Foo\r\n 2 {\r\n 3   virtual ~Foo() {}\r\n 4 };\r\n 5\r\n 6 struct Bar : public Foo\r\n 7 {\r\n 8 };\r\n 9\r\n10 int main(int argc, char** argv)\r\n11 {\r\n12   Foo* f = new Bar;\r\n13   delete f;\r\n14   f = 0;\r\n15   delete f;\r\n16\r\n17   Foo* fa = new Bar[10];\r\n18   delete [] fa;\r\n19   fa = 0;\r\n20   delete fa;\r\n21\r\n22   return 0;\r\n23 }','delete',4,27,21300,9186,41,'Ivan Novick',3),(41,'What is the value of x at the end of main?','c','1','-1','implementation defined','undefined','compiler error','if either operand to a modulus operator is negative the result is implementation defined','int main(int argc, char** argv)\r\n{\r\n  int x = 50 % -7;\r\n  return 0;\r\n}','modulus',4,28,18891,8408,42,'Ivan Novick',3),(42,'If assumptions in the code below are true what value would be the final value printed by this program?','e','0x60000000','0x60000003','0x6000000C','implementation defined','undefined','In pointer addition and subtraction if both operands and the result do not point inside the same array (or 1 past the last element of the array) the result is undefined.','int main(int argc, char** argv)\r\n{\r\n  // assume result printed is 4\r\n  std::cout << sizeof(int) << std::endl;\r\n\r\n  int *x = new int;\r\n  \r\n  // assume result printed is 0x60000000\r\n  std::cout << x << std::endl;\r\n\r\n  std::cout << x + 3 << std::endl;\r\n\r\n  return 0;\r\n}','pointer arithmetic',4,29,17259,6802,43,'Ivan Novick',3),(43,'Given the assumptions in the comments, what values is printed for x?','d','0x00000000','0xFFFFFFFF','implementation defined','undefined',NULL,'The result of a shift operation is undefined if the right operand is negative, or greater than or equal to the length in bits of the promoted left operand','int main(int argc, char** argv)\r\n{\r\n  // assume result printed is 4\r\n  std::cout << sizeof(int) << std::endl;\r\n\r\n  int x = 0x1000;\r\n\r\n  x = x << 32;\r\n  \r\n  std::cout << std::hex << x << std::endl;\r\n\r\n  return 0;\r\n}','shift operators',4,30,14755,6598,44,'Ivan Novick',3),(44,'Will &quot;Hello World&quot; be printed by the program below?','a','yes','no','implementation defined','unspecified','undefined','Pointer comparison with greater and less than relational operators is defined within the same array.','int main(int argc, char** argv)\r\n{\r\n  int array[33];\r\n\r\n  if ( &array[4] < &array[23] )\r\n  {\r\n    std::cout << \"Hello World\" << std::endl;\r\n  }\r\n\r\n  return 0;\r\n}','relational operators with pointers',4,31,15715,9480,45,'Ivan Novick',3),(45,'Will &quot;Hello World&quot; be printed by the program below?','a','yes','no','implementation defined','unspecified','undefined','Relational operators can be used to do pointer comparison of non-static members in the same object where the definitions of the members is not seperated by an access specifier.  The member declared first will evaluate to lower.  Note: other than this case, the only other time relational operators can be used to compare pointers is when the addresses point to elements in the same array.  For all other cases, the result of relational operators on pointers is unspecified.','struct Foo\r\n{\r\n  int x;\r\n  int y;\r\n};\r\n\r\nint main(int argc, char** argv)\r\n{\r\n  Foo f;\r\n\r\n  if ( &f.x < &f.y )\r\n  {\r\n    std::cout << \"Hello World\" << std::endl;\r\n  }\r\n\r\n  return 0;\r\n}','relational operators with pointers',4,32,16744,8329,46,'Ivan Novick',3),(46,'True or False, the program below will print NOT EQUAL','b','true','false',NULL,NULL,NULL,'Distinct pointer types can not be compared with equality operators','#include &lt;iostream&gt;\r\n\r\nstruct Foo\r\n{\r\n};\r\n\r\nstruct Bar \r\n{\r\n};\r\n\r\nint main(int argc, char** argv)\r\n{\r\n  Foo* f = new Foo;\r\n  Bar* b = new Bar;\r\n\r\n  if ( f == b )\r\n    std::cout << \"EQUAL\" << std::endl;\r\n  else\r\n    std::cout << \"NOT EQUAL\" << std::endl;\r\n\r\n  return 0;\r\n}','equality operators with pointers',4,33,12066,5805,47,'Ivan Novick',3),(47,'What value gets printed by the program?','a','1','2','3','4','undefined','If the first operand to the logical AND operator evaluates to false the second operand is guaranteed not to evaluate.  Note: the logical OR operator is guaranteed not to evaluate the second operand if the first operand is true. Note: for the logical AND and OR operators, all side effects of the first expression, except for destruction of temporaries, happen before the second expression is evaluated.','#include &lt;iostream&gt;\r\n\r\nint main(int argc, char** argv)\r\n{\r\n  int x = 0;\r\n  int y = 0;\r\n\r\n  if (x++ && y++)\r\n  {\r\n    y += 2;\r\n  }\r\n\r\n  std::cout << x + y << std::endl;\r\n\r\n  return 0;\r\n}','logical operators',4,34,20848,8723,48,'Ivan Novick',3),(48,'What value gets printed by the program?','d','0','3','11','21','undefined','The 2nd and 3rd operands to the conditional operator must be of the same type.  If one of the two can be converted to the other, the conversion will occur.  Note: if a conversion exists for each of the operands into the other\'s type, the program is ill-formed.','#include &lt;iostream&gt;\r\n\r\nstruct Foo\r\n{\r\n  int x;\r\n\r\n  operator int()\r\n  {\r\n    return 21;\r\n  }\r\n};\r\n\r\nint main(int argc, char** argv)\r\n{\r\n  Foo f;\r\n  f.x = 11;\r\n\r\n  std::cout << (0?3:f) << std::endl;\r\n\r\n  return 0;\r\n}','conditional operator',4,35,14988,7923,49,'Ivan Novick',3),(49,'What value gets printed by the program?','a','1','2','3','6','undefined','The operands to the comma operator are evaluated from left to right.  The value of the left hand expression is discarded.  The type and value of the result are the type type and value of the right hand operand.  Note: assignment takes precedence over the comma operator, so in this case x=1 is evaluated first; than x, 2, 3','#include &lt;iostream&gt;\r\n\r\nint main(int argc, char** argv)\r\n{\r\n  int x;\r\n\r\n  x = 1, 2, 3;\r\n\r\n  std::cout << x << std::endl;\r\n\r\n  return 0;\r\n}','comma operator',4,36,15083,8216,50,'Ivan Novick',3),(50,'What value gets printed by the program?','e','0','1','2','3','nothing, it is ill-formed','Jumping into a block and bypassing a declaration with an initialization is ill-formed.  In this example there are cases which would bypass the declaration and initialization of block scope x declaration.','#include &lt;iostream&gt;\r\n\r\nint main() \r\n{ \r\n  int x = 3;\r\n\r\n  switch(x)\r\n  {\r\n    case 0:\r\n      int x = 1;\r\n      std::cout << x << std::endl;\r\n    break;\r\n    case 3:\r\n      std::cout << x << std::endl;\r\n    break;\r\n    default:\r\n      x = 2;\r\n      std::cout << x << std::endl;\r\n  }\r\n\r\n  return 0;\r\n} \r\n','switch',4,37,13924,6895,51,'Ivan Novick',3),(51,'What value gets printed by the program?','d','0','3','3.14','nothing, its ill-formed','implementation-defined','Any construct that could possibly be considered a declaration is a declaration.  In this example, the second line of main is interpreted as a function declaration in preference to an object declaration with initialization.','#include &lt;iostream&gt;\r\n\r\nstruct Foo\r\n{\r\n  Foo(int d) : x(d) {}\r\n  int x;\r\n};\r\n\r\nint main() \r\n{ \r\n  double x = 3.14;\r\n\r\n  Foo f( int(x) );\r\n\r\n  std::cout << f.x << std::endl;\r\n\r\n  return 0;\r\n} ','declarations',4,38,14668,6676,52,'Ivan Novick',3),(52,'The code below is legal.  True or false?','a','true','false',NULL,NULL,NULL,'String literals have static storage duration, therefore they can be referenced anywhere in the translation unit, even though it is defined in a function','#include &lt;iostream&gt;\r\n\r\nconst char* Foo()\r\n{\r\n  return \"Hello World\";\r\n}\r\n\r\nint main() \r\n{ \r\n  const char* str = Foo();\r\n  std::cout << str << std::endl;\r\n\r\n  return 0;\r\n}','string literals',4,39,9286,7136,53,'Ivan Novick',3),(53,'The code below would declare an array of references, if we had properly initalized the references.  True or false?','b','true','false',NULL,NULL,NULL,'There is no such thing as an array of references.  Also there are no references to references or pointers to references.','int main() \r\n{ \r\n  int& x[50];\r\n\r\n  return 0;\r\n} ','references',4,40,9595,6967,54,'Ivan Novick',3),(54,'Which of the following operators does NOT indicate a sequence point in the code?','d','&&','||','?','=',',','All of them except the assignment operator indicate a sequence point.',NULL,'sequence points',4,41,12250,6556,55,'Ivan Novick',3),(55,'What value gets printed by the program?','d','9','15','21','ill-formed','undefined','Only the first constant expression in a multiple dimension array can be ommitted.  Therefore the declaration of the array in this example is ill-formed.','#include &lt;iostream&gt;\r\n\r\nint main() \r\n{ \r\n  int sum = 0;\r\n\r\n  int array[3][] = {{0, 1, 2}, {3, 4, 5}, {6, 7, 8}};\r\n\r\n  for (int i = 0; i < 3 ; ++i)\r\n  {\r\n    for (int j = 2; j < 3 ; j++)\r\n    {\r\n      sum += array[i][j];\r\n    }\r\n  }\r\n\r\n  std::cout << sum << std::endl;\r\n\r\n  return 0;\r\n} ','arrays',4,42,11433,5564,56,'Ivan Novick',3),(56,'What value gets printed by the program?','d','3','5','6','ill-formed','undefined','There can only be one function with the same signature. Altering the cv qualification of parameters does not change the function signature.  Therefore the two foo functions have the same signature and the program is ill-formed.','#include &lt;iostream&gt;\r\n\r\nint foo(int x, int y)\r\n{\r\n  return x+y;\r\n}\r\n\r\nint foo(const int x, const int y)\r\n{\r\n  return x+y+1;\r\n}\r\n\r\nint main(int argc, char** argv)\r\n{\r\n  const int x = 3;\r\n  const int y = 2;\r\n\r\n  std::cout << foo(x,y) << std::endl;\r\n\r\n  return 0;\r\n}','functions',4,43,11065,6237,57,'Ivan Novick',3),(57,'What value gets printed by the program?','d','3','8','11','ill-formed','undefined','The return type of a function does not alter the signature (for function overloading).  However, the return type of a function DOES change the &quot;type&quot of the function and thus the assignment of foo to ptr in not valid.','#include &lt;iostream&gt;\r\n\r\nint foo(int x, int y)\r\n{\r\n  return x+y;\r\n}\r\n\r\ndouble foo(double x, double y)\r\n{\r\n  return x+y;\r\n}\r\n\r\nint main(int argc, char** argv)\r\n{\r\n  double (*ptr)(int, int);\r\n\r\n  ptr = foo;\r\n\r\n  std::cout << ptr(3,8) << std::endl;\r\n\r\n  return 0;\r\n}','functions',4,44,10249,6525,58,'Ivan Novick',3),(58,'What value gets printed by the program?','b','3','4','9','ill-formed','undefined','The trick here is, we change the parameter names from the function declaration to function definition.  This is legal, and only the parameter names in the function definition are used.','#include &lt;iostream&gt;\r\n\r\nint foo(int y);\r\nint foo(int x)\r\n{\r\n  return x+1;\r\n}\r\n\r\nint main(int argc, char** argv)\r\n{\r\n  int x = 3;\r\n  int y = 6;\r\n\r\n  std::cout << foo(x) << std::endl;\r\n\r\n  return 0;\r\n}','functions',4,45,10345,7251,59,'Ivan Novick',3),(59,'What value gets printed by the program?','d','1','3','5','ill-formed','undefined','The program is ill-formed.  Parameters of a function can not be used in default argument expressions.','#include &lt;iostream&gt;\r\n\r\nint foo(int x, int y = x) \r\n{ \r\n  return x+y+1; \r\n} \r\n\r\nint main(int argc, char** argv) \r\n{ \r\n  std::cout << foo(2) << std::endl; \r\n  return 0; \r\n}','default arguments',4,46,9314,6049,60,'Ivan Novick',3),(60,'Which, if any, of the member function definitions below are ill-formed?','b','a','b','c','a and b','none','b is ill-formed.  Non-static members can not be used as default arguments.','#include &lt;iostream&gt;\r\n\r\nint g_x = 44; \r\n\r\nstruct Foo \r\n{ \r\n  int m_x; \r\n\r\n  static int s_x; \r\n\r\n  Foo(int x) : m_x(x) {} \r\n\r\n  int a(int x = g_x) \r\n  { \r\n    return x + 1; \r\n  } \r\n\r\n  int b(int x = m_x) \r\n  { \r\n    return x + 1; \r\n  } \r\n\r\n  int c(int x = s_x) \r\n  { \r\n    return x + 1; \r\n  } \r\n}; \r\n\r\nint Foo::s_x = 22; \r\n\r\nint main(int argc, char** argv) \r\n{ \r\n  Foo f(6); \r\n\r\n  std::cout << f.a() << std::endl; \r\n  std::cout << f.b() << std::endl; \r\n  std::cout << f.c() << std::endl; \r\n\r\n  return 0; \r\n}','default arguments',4,47,8741,4414,61,'Ivan Novick',3),(61,'What is the output of the program?','b','10','15','20','30','ill-formed','The method B::foo is called but with the default argument of 5 from A::foo.  &quot;A virtual function call uses the default arguments in the declaration of the virtual function determined by the static type of the pointer or reference denoting the object. An overriding function in a derived class does not acquire default arguments from the function it overrides.&quot;','#include &lt;iostream&gt;\r\n\r\nstruct A \r\n{ \r\n  virtual int foo(int x = 5) \r\n  { \r\n    return x * 2; \r\n  } \r\n}; \r\n\r\nstruct B : public A \r\n{ \r\n  int foo(int x = 10) \r\n  { \r\n    return x * 3; \r\n  } \r\n}; \r\n\r\nint main(int argc, char** argv) \r\n{ \r\n  A* a = new B; \r\n\r\n  std::cout << a->foo() << std::endl; \r\n\r\n  return 0; \r\n}','default arguments',4,48,13436,5641,62,'Ivan Novick',3),(62,'What is the output of the program?','b','72','75.14','ill-formed','undefined',NULL,'&quot;An aggregate is an array or a class with no user-declared constructors, no private or protected non-static data members, no base classes, and no virtual functions.&quot;  Aggregates can be initialized by &quot;brace-enclosed, comma separated list of initializer-clauses for the members of the aggregate, written in increasing subscript or member order.&quot;  Static data members are skipped during this type of initialization so 3.14 initializes d and not sd in this example  &quot;If there are fewer initializers in the list than there are members in the aggregate, then each member not explicitly initialized shall be value-initialized&quot;. So in this example i is value-initialized to 0.','#include &lt;iostream&gt;\r\n\r\nclass Foo\r\n{\r\npublic:\r\n\r\n  char c;\r\n  static double sd;\r\n  double d;\r\n  int i;\r\n};\r\n\r\nint main(int argc, char** argv) \r\n{ \r\n  Foo f = { 72, 3.14 };\r\n\r\n  std::cout << f.c + f.d + f.i << std::endl;\r\n\r\n  return 0; \r\n}','initialization',4,49,12087,5670,63,'Ivan Novick',3),(63,'What is the output of the program?','c','3','0x822222222','ill-formed','undefined',NULL,'References can not be initialized with values, so this program is ill-formed.  In this case rpx should be initialized with a pointer to an int, not with the address of an int.','#include &lt;iostream&gt;\r\n\r\nint main(int argc, char** argv) \r\n{ \r\n  // assume address of x is 0x822222222\r\n  int x = 3;\r\n\r\n  int*& rpx = &x;\r\n\r\n  std::cout << rpx << std::endl;\r\n  \r\n  return 0; \r\n}','references',4,50,8460,5502,64,'Ivan Novick',3),(64,'What is the output of the program?','c','Foo','Bar','ill-formed','undefined','unspecified','The code is ill-formed.  Non-const member functions can not be called on const objects.','#include &lt;iostream&gt;\r\n\r\nstruct Foo\r\n{\r\n  Foo() {} \r\n\r\n  void go()\r\n  {\r\n    std::cout << \"Foo\" << std::endl;\r\n  }\r\n};\r\n\r\nstruct Bar : public Foo\r\n{\r\n  Bar() {}\r\n\r\n  void go()\r\n  {\r\n    std::cout << \"Bar\" << std::endl;\r\n  }\r\n};\r\n\r\nint main(int argc, char** argv) \r\n{ \r\n  Bar b;\r\n\r\n  const Foo f = b;\r\n\r\n  f.go();\r\n\r\n  return 0; \r\n}','member functions',4,51,8101,4246,65,'Ivan Novick',3),(65,'Static member functions of classes can be virtual. True or false?','b','true','false',NULL,NULL,NULL,'Static member functions can not be virtual',NULL,'static member functions',4,52,7505,6192,66,'Ivan Novick',3),(66,'What is the output of the program?','c','0','3','ill-formed','undefined','unspecified','The code is ill-formed.  The non-static members of a base class, that is an indirect or direct base class more than once, can not be referred to without qualification.','#include &lt;iostream&gt;\r\n\r\nstruct BS\r\n{\r\n  unsigned int color;\r\n};\r\n\r\nstruct car : public BS\r\n{\r\n};\r\n\r\nstruct truck : public BS\r\n{\r\n};\r\n\r\nstruct city : public car, public truck\r\n{\r\n};\r\n\r\nint main(int argc, char** argv) \r\n{ \r\n  city c;\r\n\r\n  c.color = 3;\r\n\r\n  std::cout << c.color << std::endl;\r\n\r\n  return 0; \r\n}','inheritance',4,53,9073,5875,67,'Ivan Novick',3),(67,'How many times is Hello World printed by this program?','c','1','2','3','code is ill-formed','undefined','3 times.  One time for the first virtual occurences of BS in the heirarchy and once for each non-virtual occurence of BS.  mid1 and mid2 together have one.  mid3 and mid4 each have one.','#include &lt;iostream&gt;\r\n\r\nstruct BS\r\n{\r\n  BS()\r\n  {\r\n    std::cout << \"Hello World\" << std::endl;\r\n  }\r\n  unsigned int color;\r\n};\r\n\r\nstruct mid1 : virtual public BS { };\r\nstruct mid2 : virtual public BS { };\r\nstruct mid3 : public BS { };\r\nstruct mid4 : public BS { };\r\n\r\nstruct DR : public mid1, public mid2, \r\n            public mid3, public mid4 { };\r\n\r\nint main(int argc, char** argv) \r\n{ \r\n  DR d;\r\n  return 0; \r\n}','inheritance',4,54,8360,4686,68,'Ivan Novick',3),(68,'What gets printed by this program?','a','SHAPE','BOX','undefined','code is ill-formed','unspecified','Shape::print is not a virtual function.  Therefore Shape::print is called even though s1 points to a Box object.  If print was virtual, then BOX would be printed.','#include &lt;iostream&gt;\r\n\r\nstruct Shape\r\n{\r\n  void print()\r\n  {\r\n    std::cout << \"SHAPE\" << std::endl;\r\n  }\r\n};\r\n\r\nstruct Box : public Shape\r\n{\r\n  void print()\r\n  {\r\n    std::cout << \"BOX\" << std::endl;\r\n  }\r\n};\r\n\r\nint main(int argc, char** argv)\r\n{\r\n  Shape* s1 = new Box;\r\n\r\n  s1->print();\r\n\r\n  return 0;\r\n}','virtual functions',4,55,9109,6472,69,'Ivan Novick',3),(69,'What gets printed by this program?','e','SHAPE','BOX','SPHERE','undefined','code is ill-formed','The code is ill-formed.  Virtual functions must have a unique \"final overrider\" that overrides all other instances of that function in its inheritance heirarchy.  In this case neither Box::print nor Sphere::print override each other, so the condition is not met and the GeoDisc class is ill-formed.','#include &lt;iostream&gt;\r\n\r\nstruct Shape\r\n{\r\n  virtual void print()\r\n  {\r\n    std::cout << \"SHAPE\" << std::endl;\r\n  }\r\n  virtual ~Shape() {}\r\n};\r\n\r\nstruct Box : public virtual Shape\r\n{\r\n  void print()\r\n  {\r\n    std::cout << \"BOX\" << std::endl;\r\n  }\r\n};\r\n\r\nstruct Sphere : public virtual Shape\r\n{\r\n  void print()\r\n  {\r\n    std::cout << \"SPHERE\" << std::endl;\r\n  }\r\n};\r\n\r\nstruct GeoDisc : public Box, public Sphere\r\n{\r\n};\r\n\r\nint main(int argc, char** argv)\r\n{\r\n  Shape* s = new GeoDisc;\r\n\r\n  s->print();\r\n\r\n  delete s;\r\n\r\n  return 0;\r\n}','virtual functions',4,56,8137,4842,70,'Ivan Novick',3),(70,'How many times is Hello World printed by this program?','c','0','3','4','undefined','code is ill-formed','4 times. Virtual inheritance affects the class that is inherited virtually. Therefore the BS base class is not inherited virtually and there are 4 of them within 1 DR object. The virtual inheritance statements in this code are affecting the classes mid1, mid2, mid3, mid4 and not BS.','#include &lt;iostream&gt;\r\n\r\nstruct BS\r\n{\r\n  BS()\r\n  {\r\n    std::cout << \"Hello World\" << std::endl;\r\n  }\r\n};\r\n\r\nstruct mid1 : public BS { };\r\nstruct mid2 : public BS { };\r\nstruct mid3 : public BS { };\r\nstruct mid4 : public BS { };\r\n\r\nstruct DR : public virtual mid1, public virtual mid2, public virtual mid3, public mid4 { };\r\n\r\nint main(int argc, char** argv) \r\n{ \r\n  DR d;\r\n  return 0; \r\n}','inheritance',4,57,7628,5077,71,'Ivan Novick',3),(71,'What gets printed by this program?','a','SHAPE','BOX','undefined','code is ill-formed','unspecified','SHAPE is printed.  A function with a different signature does not override a function in a base class even if the function name is the same.','#include &lt;iostream&gt;\r\n\r\nstruct Shape\r\n{\r\n  virtual void print()\r\n  {\r\n    std::cout << \"SHAPE\" << std::endl;\r\n  }\r\n\r\n  virtual ~Shape() {}\r\n};\r\n\r\nstruct Box : public Shape\r\n{\r\n  virtual void print(int i)\r\n  {\r\n    std::cout << \"BOX\" << std::endl;\r\n  }\r\n};\r\n\r\nint main(int argc, char** argv) \r\n{ \r\n  Shape* s = new Box;\r\n\r\n  s->print();\r\n\r\n  delete s;\r\n\r\n  return 0; \r\n}','virtual functions',4,58,8084,4798,72,'Ivan Novick',3),(72,'What gets printed by this program?','b','SHAPE','BOX','undefined','code is ill-formed','unspecified','BOX is printed.  The return type of an overriding virtual function must have either the same type as the function it is overriding or both functions must return a pointer or reference with the same cv-qualifications whereby the class pointed or reffered to in the overridden function is an unambiguous and accessible direct or indirect base class of the class pointed or referred to in the overriding function.','#include &lt;iostream&gt;\r\n\r\nstruct Shape\r\n{\r\n  virtual Shape* duplicate()\r\n  {\r\n    std::cout << \"SHAPE\" << std::endl;\r\n    return new Shape;\r\n  }\r\n  virtual ~Shape() {}\r\n};\r\n\r\nstruct Box : public Shape\r\n{\r\n  virtual Box* duplicate()\r\n  {\r\n    std::cout << \"BOX\" << std::endl;\r\n    return new Box;\r\n  }\r\n};\r\n\r\nint main(int argc, char** argv) \r\n{ \r\n  Shape* s1 = new Box;\r\n\r\n  Shape* s2 = s1->duplicate();\r\n\r\n  delete s1;\r\n  delete s2;\r\n  return 0; \r\n}','virtual functions',4,59,7924,5262,73,'Ivan Novick',3),(73,'What gets printed by this program?','d','SHAPE','BOX','undefined','code is ill-formed','unspecified','The program is ill-formed.  The return type of the virtual function that is called dynamically is converted to the return type of the overridden function.  In this case the result of the duplicate() function is a pointer to a Box object but converted to a Shape pointer.  Therefore the assignment from the return value to b1 is ill-formed.','#include &lt;iostream&gt;\r\n\r\nstruct Shape\r\n{\r\n  virtual Shape* duplicate()\r\n  {\r\n    return new Shape;\r\n  }\r\n  virtual void print()\r\n  {\r\n    std::cout << \"SHAPE\" << std::endl;\r\n  }\r\n  virtual ~Shape() {}\r\n};\r\n\r\nstruct Box : public Shape\r\n{\r\n  virtual Box* duplicate()\r\n  {\r\n    return new Box;\r\n  }\r\n  virtual void print()\r\n  {\r\n    std::cout << \"BOX\" << std::endl;\r\n  }\r\n};\r\n\r\nint main(int argc, char** argv) \r\n{ \r\n  Shape* s1 = new Box;\r\n\r\n  Box* b1 = s1->duplicate();\r\n\r\n  b1->print();\r\n\r\n  delete s1;\r\n  delete b1;\r\n  return 0; \r\n}','virtual functions',4,60,8170,3299,74,'Ivan Novick',3),(74,'What gets printed by this program?','d','SHAPE','BOX','undefined','code is ill-formed','unspecified','An implicit conversion from a pointer to a derived class, to a pointer to an inaccessible (private inheritance) base class is ill-formed.  Thus the assignment of the new Box to Shape* is ill-formed.','#include &lt;iostream&gt;\r\n\r\nstruct Shape\r\n{\r\n  virtual void print()\r\n  {\r\n    std::cout << \"SHAPE\" << std::endl;\r\n  }\r\n  virtual ~Shape() {}\r\n};\r\n\r\nstruct Box : private Shape\r\n{\r\n  virtual void print()\r\n  {\r\n    std::cout << \"BOX\" << std::endl;\r\n  }\r\n};\r\n\r\nint main(int argc, char** argv) \r\n{ \r\n  Shape* s = new Box;\r\n\r\n  s->print();\r\n\r\n  delete s;\r\n\r\n  return 0; \r\n}','access control',4,61,7533,3630,75,'Ivan Novick',3),(75,'Which lines below should not compile?','b','none','17','18','19','20','Line 17 should not compile.  Access to non-static protected members of a base class can not be via a pointer or reference to the base class.','1 #include &lt;iostream&gt;\r\n2\r\n3 class Bar\r\n4 {\r\n5 protected:\r\n6   static int x;\r\n7   int y;\r\n8 };\r\n9\r\n10 int  Bar::x = 33;\r\n11\r\n12 class Barrel : public Bar\r\n13 {\r\n14 public:\r\n15   void foo(Bar* b, Barrel* d)\r\n16   {\r\n17     b->y = 0;\r\n18     d->y = 0;\r\n19     Bar::x = 0;\r\n20     Barrel::x = 0;\r\n21   }\r\n22 };\r\n23\r\n24 int main(int argc, char** argv)\r\n25 {\r\n26   Barrel b;\r\n27   b.foo(&b, &b);\r\n28   return 0;\r\n29 }','protected access control',4,62,7290,2756,82,'Ivan Novick',3),(76,'What will be the size of the @fields array','d','0','1','3','5',NULL,'split() with -1 as the limit will preserve empty fields at the end. Leading empty fields are always preserved except a special case with omitted pattern or pattern of \' \' (space)','my $record = \':a:b:c:\'; \r\n\r\nmy @fields = split(\':\', $record, -1);','split',2,9,12721,6090,77,'Alexander Saydakov',3),(77,'What will be the output of the code below?','a','blah','Can\'t locate object method \"new\" via package \"B\"',NULL,NULL,NULL,'new() is a regular method and is also inherited','package A;\r\n\r\nsub new {\r\n    my $class = shift;\r\n    return bless {}, $class;\r\n}\r\n\r\n \r\npackage B;\r\nuse base \'A\';\r\n\r\nsub foo {\r\n    return \'blah\';\r\n}\r\n\r\n\r\npackage main;\r\n\r\nmy $obj = B->new();\r\n\r\nprint $obj->foo(), \"\\n\";','object-oriented Perl',2,10,6017,4498,78,'Alexander Saydakov',3),(78,'The following operator will collapse all duplicate spaces into single spaces in the string $str','b','true','false',NULL,NULL,NULL,'it will collapse only the first occurrence, the \'g\' modifier is needed to replace globally: s/\\s+/ /g','$str =~ s/\\s+/ /;','substitution operator',2,11,6968,3907,79,'Alexander Saydakov',3),(79,'What elements will the @a array consist of?','d','\' \', \'a\', \' \', \'b\', \' \', \'c\', \' \'','\'\', \'a\', \'b\', \'c\', \'\'','undef, \'a\', \'b\', \'c\', undef','\'a\', \'b\', \'c\'','\' \', \'a\', \'b\', \'c\'','This is a special case emulating awk’s default behavior: splits on whitespace after skipping any leading whitespace. Trailing empty fields are not produced unless limit is specified','$_ = \' a b c \';\r\n\r\nmy @a = split();','split',2,12,9901,5226,80,'Alexander Saydakov',3),(80,'What gets printed by the following program?','a','list context','scalar context','nothing',NULL,NULL,'foo() is assigned to a list (of one element), so wantarray returns true','my ($x) = foo();\r\nprint \"$x\\n\";\r\n\r\nsub foo {\r\n  return wantarray ? \'list context\' : \'scalar context\';\r\n}\r\n','context',2,13,7026,4451,81,'Alexander Saydakov',3),(81,'All three ways of calling new() are equivalent in the code below','a','true','false',NULL,NULL,NULL,'The first two calls implicitly pass the package name of \'A\' as the first parameter. The last call has the form of a static one, but passes \'A\' explicitly, which is not a usual practice, but possible','package A;\r\n\r\nsub new {\r\n    my ($class, $param) = @_;\r\n    return bless {param => $param}, $class;\r\n}\r\n\r\n\r\npackage main;\r\n\r\nmy $a1 = A->new(\'foo\');\r\nmy $a2 = new A(\'foo\');\r\nmy $a3 = A::new(\'A\', \'foo\');\r\n','object-oriented Perl',2,14,4457,3409,92,'Alexander Saydakov',3),(82,'Which lines below should not compile?','b','none','9','10','11','9 and 10 and 11','If any user-declared constructor is present in the class, then no default constructor will be created implicitly.  Additionally if no user declared copy constructor is declared, then an implicit copy constructor will be created by the compiler.  In this example there is a user-declared constructor which prevents the default constructor from existing, but a copy constructor is still created implicitly.','1 struct A\r\n2 {\r\n3    A(int x) : n(x) {}\r\n4    int n;\r\n5 };\r\n6\r\n7 int main(int argc, char** argv)\r\n8 {\r\n9    A a1;\r\n10   A a2(2);\r\n11   A a3(a2);\r\n12   return 0;\r\n13 }','copy constructors',4,63,10012,5546,83,'Ivan Novick',3),(83,'Which of the following statements are true?','d','1','2','3','1 and 3','2 and 3','The 2nd statement is not true','1) Conversion functions of class A convert from\r\n   class A into another type\r\n\r\n2) Conversion functions of class A are used to\r\n   convert from another given type into class A\r\n\r\n3) Converting constructors must be callable with\r\n   a single argument','user defined conversions',4,64,8155,4172,84,'Ivan Novick',3),(84,'What gets printed for the value of z?','c','3','4','5','code is ill-formed','undefined','There is a sequence point after the initalization of each base and member, thus the code is well-formed and defined<br><br>','#include &lt;iostream&gt;\r\n\r\nstruct Foo\r\n{\r\n  Foo(int n) : x(n++), y(n++), z(n++) {}\r\n  int x;\r\n  int y;\r\n  int z;\r\n};\r\n\r\nint main(int argc, char** argv)\r\n{\r\n  Foo f(3);\r\n\r\n  std::cout << \"x: \" << f.x << std::endl;\r\n  std::cout << \"y: \" << f.y << std::endl;\r\n  std::cout << \"z: \" << f.z << std::endl;\r\n\r\n  return 0;\r\n}','member initialization',4,65,8504,5196,85,'Ivan Novick',3),(85,'What gets printed?','a','20000','22000','30000','33000','code is ill-formed','20000 is output.<br>All sub-objects representing virtual base classes are initialized by the constructor of the most derived class.  If the constructor of the most derived class does not specify a mem-initializer for a virtual base class V, then V\'s default construtor is called to initialize the virtual base class subobject.','#include &lt;iostream&gt;\r\n\r\nstruct Car\r\n{\r\n  Car() : price(20000) {}\r\n  Car(double b) : price(b*1.1) {}\r\n  double price;\r\n};\r\n\r\nstruct Toyota : public virtual Car\r\n{\r\n  Toyota(double b) : Car(b) {}\r\n};\r\n\r\nstruct Prius : public Toyota\r\n{\r\n  Prius(double b) : Toyota(b)  {}\r\n};\r\n\r\nint main(int argc, char** argv)\r\n{\r\n  Prius p(30000);\r\n\r\n  std::cout << p.price << std::endl;\r\n\r\n  return 0;\r\n}','member initialization',4,66,6602,2414,86,'Ivan Novick',3),(86,'What is the maximum number of implicitly defined constructors that this struct will have?','a','0','1','2','implementation specified','undefined','There will be no implicity defined constructors for this struct.<br>','struct A\r\n{\r\n  A(A& a) { }\r\n  A(double d) {}\r\n  int val;\r\n};','Copying class objects',4,67,7443,4127,87,'Ivan Novick',3),(87,'What gets printed?','d','0','5','10','code is ill-formed','undefined','The program is ill-formed.  The third line of main tries to initialize a3 with a2, but A\'s copy constructor takes a non-const reference which violates a2\'s const declaration.','#include &lt;iostream&gt;\r\n\r\nstruct A\r\n{\r\n  A() : val(0) {}\r\n  A(int v) : val(v) {}\r\n  A(A& a) : val(a.val) {} \r\n\r\n  int val;\r\n};\r\n\r\nint main(int argc, char** argv)\r\n{\r\n  const A a1;\r\n  const A a2(5);\r\n  const A a3 = a2;\r\n\r\n  std::cout << a1.val + a2.val + a3.val << std::endl;\r\n\r\n  return 0;\r\n}','Copying class objects',4,68,6208,2861,88,'Ivan Novick',3),(88,'What gets printed?','d','0','5','10','code is ill-formed','unspecified','It is illegal to have a constructor whose first and only non-default argument is a value parameter for the class type.','#include &lt;iostream&gt;\r\n\r\nstruct A\r\n{\r\n  A() : val() {}\r\n  A(int v) : val(v) {}\r\n  A(A a) : val(a.val) {} \r\n\r\n  int val;\r\n};\r\n\r\nint main(int argc, char** argv)\r\n{\r\n  A a1(5);\r\n  A a2(a1);\r\n\r\n  std::cout << a1.val + a2.val << std::endl;\r\n\r\n  return 0;\r\n}','Copying class objects',4,69,6294,3229,89,'Ivan Novick',3),(89,'Which lines below are ill-formed?','c','14','16','18','14, 16','16, 18','It is ill-formed to use an implicitly defined assignment operator when one of the members that will need to be copied is a reference. (Line 18)','1 #include &lt;iostream&gt;\r\n2\r\n3 struct A\r\n4 {\r\n5   A(int& var) : r(var) {}\r\n6\r\n7   int &r;\r\n8 };\r\n9\r\n10 int main(int argc, char** argv)\r\n11 {\r\n12   int x = 23;\r\n13\r\n14   A a1(x);\r\n15\r\n16   A a2 = a1;\r\n17\r\n18   a2 = a1;\r\n19\r\n20   return 0;\r\n21 }','Copying class objects',4,70,7483,3541,90,'Ivan Novick',3),(90,'What gets printed?','c','20','30','38','40','The code is ill-formed','When calling global foo, the function is overloaded and each foo is called once depending on the type of the argument.  When calling the member foo, Gateway::foo hides Computer::foo so Gateway::foo is called twice.','#include &lt;iostream&gt;\r\n\r\nint foo(int i)\r\n{\r\n  return 2;\r\n}\r\n\r\ndouble foo(double d)\r\n{\r\n  return 4.0;\r\n}\r\n\r\nstruct Computer\r\n{\r\n  int foo(int i)\r\n  {\r\n    return 8; \r\n  }\r\n};\r\n\r\nstruct Gateway : public Computer\r\n{\r\n  double foo(double d)\r\n  {\r\n    return 16.0; \r\n  }\r\n};\r\n\r\nint main(int argc, char** argv)\r\n{\r\n  Gateway g;\r\n\r\n  std::cout << foo(1) + foo(1.0) + g.foo(1) + g.foo(1.0) << std::endl;\r\n\r\n  return 0;\r\n}','Function Overloading',4,71,8273,4094,91,'Ivan Novick',3),(91,'What gets printed?','e','2','6','7','8','code is ill-formed','A member function template can not be virtual.','#include &lt;iostream&gt;\r\n\r\nstruct mybase\r\n{\r\n  int x;\r\n  \r\n  template &lt;int RANGE&gt;\r\n  virtual void print()\r\n  {\r\n    std::cout << RANGE + x + 1 << std::endl;\r\n  }\r\n};\r\n\r\nstruct myderived : public mybase\r\n{\r\n  template &lt;int RANGE&gt; \r\n  void print()\r\n  {\r\n    std::cout << RANGE + x + 2 << std::endl;\r\n  }\r\n};\r\n\r\nint main(int argc, char** argv)\r\n{\r\n  mybase* b = new myderived;\r\n\r\n  b->x = 1;\r\n\r\n  b->print&lt;5&gt;();\r\n\r\n  return 0;\r\n}','Member Templates',4,72,6060,3530,173,'Ivan Novick',3),(92,'What will be the value of $keys after execution of the following code?','c','undef','0','1','2','code will fail','both $var and $var->{key1} will spring into existence, so keys(%{$var}) == 1','my $var;\r\n\r\nif (exists $var->{key1}->{key2}) {\r\n    $var->{key1}->{key2} = 1;\r\n}\r\n\r\nmy $keys = keys(%{$var});','autovivification',2,15,5961,3238,93,'Alexander Saydakov',3),(93,'What gets printed?','c','undef','0','3',NULL,NULL,'Perl evaluates the right side of the assignment before \'my $a\' in the sub foo()  masks the global $a','my $a = 3;\r\n\r\nprint foo(), \"\\n\";\r\n\r\nsub foo {\r\n    my $a = $a;\r\n}','masking',2,16,6206,4057,94,'Alexander Saydakov',3),(94,'What gets printed?','c','0','1','2','3','0 1 2','There is no list here, but the comma operator in scalar context. This causes the last value to be returned.','my $a = (0, 1, 2);\r\n\r\nprint \"$a\\n\";','context',2,17,8624,3957,95,'Alexander Saydakov',3),(95,'What will be printed?','b','true','false',NULL,NULL,NULL,'This is a special case of automatic conversion between strings and numbers','my $val = \'0\';\r\n\r\nif ($val) {\r\n    print \"true\\n\";\r\n} else {\r\n    print \"false\\n\";\r\n}\r\n','literals',2,18,5281,3505,96,'Alexander Saydakov',3),(96,'What gets printed?','c','ab(newline)','a\\b(newline)','a\\b\\n','a\\\\b(newline)','a\\\\b\\n','\\\\ is a special case in single-quoted string literals, which gives \\, \\n is not interpolated in single-quoted string literals','my $str = \'a\\\\b\\n\';\r\n\r\nprint $str;\r\n','literals',2,19,8835,3846,97,'Alexander Saydakov',3),(97,'What will be the value of $str after execution of the following code?','c','112133','1233','1213','12133',NULL,'this finds pairs of characters and replaces them with a single instance','my $str = \'112133\';\r\n\r\n$str =~ s/(.)\\1/$1/g;','regex',2,20,6432,3683,98,'Alexander Saydakov',3),(98,'What will be printed by the following code?','a','A','B','the code will fail',NULL,NULL,'bless() with omitted class name uses the name of the current package, so new() in this code always creates instances of A','package A;\r\n\r\nsub new { return bless {}; }\r\nsub foo { return \'A\'; }\r\n\r\n\r\npackage B;\r\nuse base \'A\';\r\n\r\nsub foo { return \'B\'; }\r\n\r\n\r\npackage main;\r\n\r\nmy $obj = B->new();\r\n\r\nprint $obj->foo(), \"\\n\";\r\n','object-oriented Perl',2,21,4325,2366,99,'Alexander Saydakov',3),(99,'What will be printed by the following code?','b','A','B1','B2','the code is ill-formed',NULL,'Perl is looking for methods in base classes in the order of mentioning them in the \'use base\' statement','package A;\r\n\r\nsub new { return bless {}, shift };\r\nsub foo { return \'A\' }\r\n\r\n\r\npackage B1;\r\nuse base \'A\';\r\n\r\nsub foo { return \'B1\' }\r\n\r\n\r\npackage B2;\r\nuse base \'A\';\r\n\r\nsub foo { return \'B2\' }\r\n\r\n\r\npackage C;\r\nuse base \'B1\', \'B2\';\r\n\r\n\r\npackage main;\r\n\r\nmy $obj = C->new();\r\n\r\nprint $obj->foo(), \"\\n\";\r\n','object-oriented Perl',2,22,4575,2271,100,'Alexander Saydakov',3),(100,'What gets printed?','c','empty string','value','the code will fail',NULL,NULL,'$self->init() is called before $self is blessed, so the code will fail with the following message: Can\'t call method \"init\" on unblessed reference','package A;\r\n\r\nsub new {\r\n    my $class = shift;\r\n    my $self = {};\r\n    $self->init();\r\n    return bless $self, $class;\r\n};\r\n  \r\nsub init {\r\n    my $self = shift;\r\n    $self->{key} = \'value\';\r\n}\r\n \r\nsub get {\r\n    my ($self, $key) = @_;\r\n    return $self->{$key}; \r\n}\r\n \r\n\r\npackage main;\r\n\r\nmy $obj = A->new();\r\nprint $obj->get(\'key\'), \"\\n\";','object-oriented Perl',2,23,3424,1607,101,'Alexander Saydakov',3),(101,'What gets printed?','b','same','different','the code is ill-formed',NULL,NULL,'0123 is an octal literal, but 123 is a decimal one','my $a = 123;\r\nmy $b = 0123;\r\n\r\nif ($a == $b) {\r\n    print \"same\";\r\n} else {\r\n    print \"different\";\r\n}\r\n','literals',2,24,4519,3122,102,'Alexander Saydakov',3),(102,'What gets printed?','a','same','different','the code is ill-formed',NULL,NULL,'using numerical == operator forces conversion from strings to numbers, which is decimal','my $a = \'123\';\r\nmy $b = \'0123\';\r\n\r\nif ($a == $b) {\r\n    print \"same\";\r\n} else {\r\n    print \"different\";\r\n}\r\n','literals, conversion',2,25,4265,2583,103,'Alexander Saydakov',3),(103,'What gets printed?','a','same','different','the code is ill-formed',NULL,NULL,'_ can be used to separate triplets in numeric literals for readability','my $a = 123456;\r\nmy $b = 123_456;\r\n\r\nif ($a == $b) {\r\n    print \"same\";\r\n} else {\r\n    print \"different\";\r\n}','literals',2,26,4797,2811,104,'Alexander Saydakov',3),(104,'What will be the value of $size after executing the following code?','c','undef','0','1','2','3','$#a = 0 truncates the array to one element (0)','my @a = (0, 1, 2);\r\n\r\n$#a = 0;\r\n\r\nmy $size = @a;','arrays',2,27,6875,3083,105,'Alexander Saydakov',3),(105,'What will be printed?','e','1','2','3','undef','the code is ill-formed','$val is not defined outside of the for {} block, so the code will fail with the following message: \"Global symbol \"$val\" requires explicit package name at ...\"','use strict;\r\nmy @a = (1, 2, 3);\r\n\r\nmy %b = (2 => undef);\r\n\r\nfor my $val (@a) {\r\n    last if $b{$val};\r\n}\r\n\r\nprint $val;','scope',2,28,5175,2258,106,'Alexander Saydakov',3),(106,'What will be the value of $val?','e','undef','aa','cccc','0','3','this will count the number of words','my $str = \'aa bb cccc\';\r\n\r\nmy $val = () = $str =~ /\\w+/g;\r\n','regex, context',2,29,4698,2640,107,'Alexander Saydakov',3),(107,'What will the @b array consist of?','c','(1, 5, 10)','(10, 5, 1)','(1, 10, 5)','(5, 10, 1)','()','sort() compares elements as strings by default','my @a = (10, 5, 1);\r\n\r\nmy @b = sort @a;','sort',2,30,6081,3097,108,'Alexander Saydakov',3),(108,'What will be the value of $keys?','d','undef','0','1','2','the code is ill-formed','any scalar key can be used in hashes, keys() in scalar context returns the number of keys','my %hash;\r\n\r\n$hash{undef} = undef;\r\n$hash{\'\'} = \'\';\r\n\r\nmy $keys = keys(%hash);','hashes',2,31,4843,2204,109,'Alexander Saydakov',3),(109,'What will be the value of $count after executing the following code?','e','0','1','2','3','the code if ill-formed','calling keys() resets each(), so this code will never leave the loop','my %hash = (a => 1, b => 2);\r\n\r\nmy $count = 0;\r\n\r\nwhile (my ($key, $value) = each(%hash)) {\r\n    $count++ if $value == keys(%hash)\r\n}\r\n','hashes',2,32,3899,1679,110,'Alexander Saydakov',3),(110,'What will be printed?','c','0','1','2','3','the code will fail','the final comma is ignored','my @a = (0, 1,);\r\n\r\nprint scalar(@a), \"\\n\";\r\n','lists',2,33,3352,2057,111,'Alexander Saydakov',3),(111,'What will be printed?','b','0','1','2','3','the code will fail','nextval() accesses the $id, which is local to the BEGIN {} block','BEGIN {\r\n    my $id = 0;\r\n    sub nextval {\r\n        $id++;\r\n        return $id;\r\n    }\r\n}\r\n\r\nmy $id = 2;\r\n$id = nextval();\r\nprint $id;','closure',2,34,3368,1684,112,'Alexander Saydakov',3),(112,'What will be printed?','c','2','6','106','I don\'t like undefs','','The message from die() in this code is ignored, 100 is added when exception is caught','my @a = (1, undef, 2);\r\n\r\nmy $sum = 0;\r\nforeach my $val (@a) {\r\n    eval {\r\n        $sum += foo($val);\r\n    };\r\n    if ($@) {\r\n        $sum += 100;\r\n    }\r\n}\r\n\r\nprint \"$sum\\n\";\r\n\r\nsub foo {\r\n    my $val = shift;\r\n    die \"I don\'t like undefs\" unless defined $val;\r\n    return $val + $val;\r\n}','exceptions',2,35,2106,1364,113,'Alexander Saydakov',3),(113,'What will be printed?','d','abc','bac','ab','ba','bca','BEGIN block gets executed before everything else, function foo() is never called','print \'a\';\r\n\r\nBEGIN {\r\n    print \'b\';\r\n}\r\n\r\nsub foo {\r\n    print \'c\';\r\n}','begin block',2,36,2903,1618,114,'Alexander Saydakov',3),(114,'Which messages will be printed in the code below?','a','both','hello world!','goodbye world!','neither','the code will fail','DESTROY() gets called because $obj reference, blessed to the class A, reaches the end of life','package A;\r\n\r\nsub NEW {\r\n    print \"hello world!\\n\";\r\n    return bless {};\r\n};\r\n\r\nsub DESTROY {\r\n    print \"goodbye world!\\n\";\r\n};\r\n\r\n\r\npackage main;\r\n\r\nmy $obj = A::NEW();','object-oriented Perl',2,37,2914,1314,115,'Alexander Saydakov',3),(115,'What gets printed?','b','1','2','3','the code will fail',NULL,'the END block gets executed after everything else','my $a = 1;\r\n\r\n{\r\n    $a = 2;  \r\n}\r\n\r\nEND {\r\n    $a = 3;\r\n}\r\n\r\nprint $a;\r\n','end block',2,38,3153,1576,116,'Alexander Saydakov',3),(116,'What will be printed?','d','abcd','acbd','cadb','acdb','the code will fail','Multiple BEGIN blocks are allowed and will execute in the order of definition. Multiple END blocks are also allowed and will execute in the reverse order of definition','BEGIN {\r\n    print \'a\';\r\n}\r\n\r\nEND {\r\n    print \'b\';\r\n}\r\n\r\nBEGIN {\r\n    print \'c\';\r\n}\r\n\r\nEND {\r\n    print \'d\';\r\n}\r\n','begin and end block',2,39,2958,1520,117,'Alexander Saydakov',3),(117,'What will be printed (disregard newlines)?','d','a b c','b','b c','b a c','b c a','END  blocks are executed as late as possible, that is, after perl has finished running the program and just before the interpreter is being exited, even if it is exiting as a result of a die() call. Objects are destructed before END blocks are executed','package A;\r\n\r\nsub new { return bless {} }\r\nsub DESTROY { print \"a\\n\" }\r\n\r\n\r\npackage main;\r\n\r\nmy $a = A->new();\r\n\r\ndie \"b\\n\";\r\n\r\nEND {\r\n    print \"c\\n\";\r\n}\r\n','destructors',2,40,2593,1287,118,'Alexander Saydakov',3),(118,'What gets printed?','d','1 2 3','2 3 4','5 6 7','6 7 8','the code will fail','the second element (index 1) in the array @a is a reference to an anonymous array, which is dereferenced by @{}, and then the slice [1..3] is taken','my @a = ([1, 2, 3, 4], [5, 6, 7, 8]);\r\n\r\nprint join(\' \', @{$a[1]}[1..3]);','arrays',2,41,3264,1605,119,'Alexander Saydakov',3),(119,'What will be printed?','c','1','true','CODE','SCALAR','SUB','ref(EXPR) returns \'CODE\' if EXPR is a reference to a code','my $var = sub { print \'Hello!\' };\r\n \r\nprint ref($var);\r\n','references',2,42,2566,1378,120,'Alexander Saydakov',3),(120,'What gets printed after execution of the following program?','d','A','B','AB','BA','none of the above','If the reference in DESTROY() is re-blessd before the destructor returns, perl will call DESTROY() for the re-blessed object after the current one returns','package A;\r\n\r\nsub new { return bless {}, shift; }\r\nsub DESTROY { print ref(shift); }\r\n\r\n\r\npackage B;\r\nuse base \'A\';\r\n\r\nsub DESTROY {\r\n    my $self = shift;\r\n    print ref($self);\r\n    bless $self, \'A\';\r\n}\r\n\r\n\r\npackage main;\r\n\r\nmy $obj = B->new();\r\n','object-oriented Perl',2,43,2166,1094,121,'Alexander Saydakov',3),(121,'What will be printed?','a','true','false',NULL,NULL,NULL,'isa(CLASS) returns true if its object is blessed into a subclass of CLASS','package A;\r\nsub new { return bless {}, shift; }\r\n\r\npackage B;\r\nuse base \'A\';\r\n\r\npackage main;\r\n\r\nmy $obj = B->new();\r\n\r\nif ($obj->isa(\'A\')) {\r\n  print \'true\';\r\n} else {\r\n  print \'false\';         \r\n}\r\n','object-oriented Perl',2,44,1262,974,122,'Alexander Saydakov',3),(122,'What gets printed?','b','A','AA','Can\'t locate object method \"foo\" via package \"A\"','none of the above',NULL,'The AUTOLOAD method will be called twice: as foo() and as DESTROY()','package A;\r\nsub NEW { bless {}, shift }\r\nsub AUTOLOAD { print ref(shift) }\r\n\r\npackage main;\r\n\r\nmy $obj = NEW A;\r\n\r\n$obj->foo();','autoload',2,45,1805,1027,123,'Alexander Saydakov',3),(123,'Which messages will be printed?','b','both \'can run\' and \'can bark\'','can run','can bark','none of the above','the code will fail','can(NAME) checks if package has a method called NAME, and AUTOLOAD() does not mean that any method is there','package Animal;\r\nsub AUTOLOAD {}                                   \r\nsub new { bless {}, shift }\r\n\r\npackage Dog;\r\nuse base \'Animal\';\r\nsub run {}\r\n\r\npackage main;\r\n\r\nmy $obj = Dog->new();\r\n\r\nif ($obj->can(\'run\')) {\r\n    print \"can run\\n\"  \r\n}\r\n \r\nif ($obj->can(\'bark\')) {\r\n    print \"can bark\\n\"  \r\n}\r\n','can, autoload',2,46,1969,941,133,'Alexander Saydakov',3),(124,'What gets printed?','a','true','false',NULL,NULL,NULL,'this is a string literal, which converts to boolean true','$var = \'false\';\r\n\r\nif ($var) {\r\n    echo \'true\';\r\n} else {\r\n    echo \'false\';\r\n}\r\n','literals',1,6,28139,19787,125,'Alexander Saydakov',3),(125,'Which of the following is used to declare a constant','c','const','constant','define','#pragma','def','Here is an example of declaring and using a constant:<br><code>define(PI, 3.14);<br>printf(\"PI = %.2f\\n\", PI);</code>',NULL,'constants',1,7,32217,19449,126,'Alexander Saydakov',3),(126,'What will be printed?','b','true','false',NULL,NULL,NULL,'string literal \'0\' is a special case for conversion to boolean: it converts to false','$var = \'0\';\r\n\r\nif ($var) {\r\n    echo \'true\';\r\n} else {\r\n    echo \'false\';\r\n}\r\n','literals',1,8,27347,14901,127,'Alexander Saydakov',3),(127,'What will be the value of $var?','b','0','0.5','1',NULL,NULL,'There is no integer division in PHP, so this evaluates to 0.5','$var = 1 / 2;','types',1,9,24571,19537,128,'Alexander Saydakov',3),(128,'How do we access the value of \'d\' later?','e','$a[0]','$a[1]','$a[2]','$a[3]','$a[4]','It gets the largest integer index on the moment of its definition + 1','$a = array(\r\n    \'a\',\r\n    3 => \'b\',\r\n    1 => \'c\',\r\n    \'d\'\r\n);\r\n','arrays',1,10,41951,19180,129,'Alexander Saydakov',3),(129,'Which of the following is NOT a magic predefined constant?','c','__LINE__','__FILE__','__DATE__','__CLASS__','__METHOD__','__DATE__ does not exist.  The others are predfined constants that change depending on where they are used.  __FUNCTION__ is the other one, not listed here.',NULL,'constants',1,11,30512,14098,130,'Alexander Saydakov',3),(130,'What will be printed?','a','true','false',NULL,NULL,NULL,'empty array converts to null','$a = array();\r\n\r\nif ($a == null) { \r\n  echo \'true\';\r\n} else {\r\n  echo \'false\';\r\n}\r\n','arrays, null',1,12,22666,15749,131,'Alexander Saydakov',3),(131,'What will be printed','b','true','false','there is a syntax error',NULL,NULL,'=== is true if values are equal and of the same type, false is of the boolean type, but null is of the special null type','if (null === false) {\r\n  echo \'true\';\r\n} else {\r\n  echo \'false\';\r\n}\r\n','comparison, null',1,13,30782,15633,132,'Alexander Saydakov',3),(132,'What gets printed?','d','11','22','33','37','39','A decimal plus an octal plus a hex number.  11 + 9 + 17 = 37','&lt;?php\r\n\r\n$RESULT = 11 + 011 + 0x11;\r\n\r\necho \"$RESULT\";\r\n\r\n?&gt;\r\n','integers',1,14,24551,9576,134,'Alexander Saydakov',3),(133,'How many key-value pairs will the hash contain?','b','1','2','3','4','the code will fail','Hashes can only hold scalars (strings, numbers or references). Each reference to an anonymous array in this example will be converted to a different string like \'ARRAY(0x814f15c)\'','my %hash = (\r\n  [1, 2] => 1,\r\n  [1, 2] => 2\r\n);','hashes',2,47,2502,1506,137,'Alexander Saydakov',3),(134,'What will be the value of $var below?','b','1','2','3',NULL,NULL,'ternary expressions are evaluated from left to right','$var = true ? \'1\' : false ? \'2\' : \'3\';','ternary',1,15,32384,14709,135,'Alexander Saydakov',3),(135,'What will be printed?','a','true','false',NULL,NULL,NULL,'Numerical strings are compared as integers','if (\'2\' == \'02\') {   \r\n  echo \'true\';\r\n} else {\r\n  echo \'false\';\r\n}\r\n','comparison',1,16,20310,12487,136,'Alexander Saydakov',3),(136,'Which of the following is NOT a valid PHP comparison operator?','c','!=','>=','&&&','<>','===','There is no &&& operator in PHP',NULL,'comparison',1,17,19143,14877,138,'Alexander Saydakov',3),(137,'What gets printed?','b','true','false',NULL,NULL,NULL,'my $var is a lexically-scoped variable, $main::var is a package global variable','my $var = 1;\r\n$main::var = 2;\r\n\r\nif ($var == $main::var) {\r\n  print \'true\';\r\n} else {\r\n  print \'false\';\r\n}\r\n','scope',2,48,1660,1151,145,'Alexander Saydakov',3),(138,'What will be printed?','c','aa','bb','ab',NULL,NULL,'Variable names are case-sensitive','$var = \'a\';\r\n$VAR = \'b\';\r\n\r\necho \"$var$VAR\";','case sensitivity',1,18,19136,15266,139,'Alexander Saydakov',3),(139,'What will be printed?','b','2','3','4','5','6','Keys will be converted like this: null to \'\' (empty string),  true to 1, false to 0','$a = array(\r\n  null => \'a\',\r\n  true => \'b\',\r\n  false => \'c\',\r\n  0 => \'d\',\r\n  1 => \'e\',\r\n  \'\' => \'f\'\r\n);\r\n\r\necho count($a), \"\\n\";','arrays',1,19,37933,13391,140,'Alexander Saydakov',3),(140,'What gets printed?','a','Caught Exception','Caught MyException',NULL,NULL,NULL,'The first catch will match because MyException is a subclass  of Exception, so the second catch is unreachable','class MyException extends Exception {}\r\n\r\ntry {\r\n  throw new MyException(\'Oops!\');\r\n} catch (Exception $e) {\r\n  echo \"Caught Exception\\n\";\r\n} catch (MyException $e) {\r\n  echo \"Caught MyException\\n\";\r\n}\r\n','exceptions',1,20,16065,10056,141,'Alexander Saydakov',3),(141,'What will be printed?','a','0','1','2','this code won\'t work',NULL,'checking value in if() does not create an array element','$a = array();\r\n\r\nif ($a[1]) null;\r\n\r\necho count($a), \"\\n\";','arrays',1,21,21978,12509,142,'Alexander Saydakov',3),(142,'What will be printed by the below code?','b','1','2',NULL,NULL,NULL,'PHP variables only have a single scope (except in functions)','$a = 1;\r\n\r\n{\r\n  $a = 2;\r\n}\r\n \r\necho $a, \"\\n\";','scope',1,22,17565,11254,143,'Alexander Saydakov',3),(143,'What gets printed?','c','ab(newline)','a\\b(newline)','a\\b\\n','a\\\\b(newline)','a\\\\b\\n','\\\\ is a special case in single-quoted string literals, which gives a single \\, \\n is not interpolated in single-quoted string literals','$str = \'a\\\\b\\n\'; \r\n  \r\necho $str;','strings',1,23,33035,12038,144,'Alexander Saydakov',3),(144,'Which statement about the code below is correct?','c','the code is perfectly fine','classes can not be empty','class C can not extend both A and B','qualifiers \'public\' or \'private\'  are missing in class definitions',NULL,'A class can only inherit one base class','class A {}\r\n\r\nclass B {}\r\n\r\nclass C extends A, B {}\r\n','classes',1,24,20271,13511,0,'Alexander Saydakov',3),(145,'Which of the following is the correct way of sorting an array of integers in ascending order?','d','sort @a','sort {$1 <=> $2} @a','sort {$_[0] <=> $_[1]} @a','sort {$a <=> $b} @a','sort {$_[0] cmp $_[1]} @a','elements to be compared are passed into the subroutine as the package global variables $a and $b, <=> is numerical comparison',NULL,'sort',2,49,2544,1500,146,'Alexander Saydakov',3),(146,'Which of the following erases all entries in the %h hash?','d','undef %h;','delete %h;','%h = {};','%h = ();','delete keys(%h);','assigning an empty list will do it',NULL,'hashes',2,50,3627,1664,148,'Alexander Saydakov',3),(147,'What is the correct output from the following code?','e','3','5','6','7','undefined','If you modify a variable more than one time in a single statement the behavior is undefined according to the C standard.','#include &lt;stdio.h&gt;\r\n\r\nint main(int argc, char** argv)\r\n{\r\n   int x = 3;\r\n   printf(\"%d\", x++  +  ++x);\r\n   return 1;\r\n}','sequence points',3,1,43777,23736,149,'Ivan Novick',3),(148,'Which of the following will be matched by this code?','d','any number of any characters','any number of any characters surrounded by Q and E','literally Q.*E','literally .*','literally \\Q.*\\E','metacharachters between \\Q and \\E will be quoted, so it will match literally .*','my $pattern = \'.*\';\r\n$str =~ /(\\Q$pattern\\E)/;','regex',2,51,3409,1541,0,'Alexander Saydakov',3),(149,'What will the following code do?','b','core dump','nothing, but the code is safe','undefined behavior',NULL,NULL,'Calling free on a NULL ptr is a no operation.  It is not illegal and will not core dump.  It is defined behavior.','int main(int argc, char** argv){\r\n   char* ptr = NULL;\r\n   free(ptr);\r\n   return 0;\r\n}','free',3,2,20003,13047,150,'Ivan Novick',3),(150,'Which of the following differences between malloc and calloc are true?','b','1, 2, 3, 4','1, 2, 3','1, 2','1','none of the statements are true','All statements are true except 4.  calloc will initialize the memory to 0, but malloc does not initialize the memory.','1) malloc allocates number of bytes passed as argument\r\n\r\n2) calloc allocates the product of number of elements \r\n    multiplied by the size of each element, \r\n    which are both passed as arguments.\r\n\r\n3) both malloc and calloc return void*\r\n\r\n4) both malloc and calloc initialize allocated\r\n    memory to all 0','malloc',3,3,16536,8876,151,'Ivan Novick',3),(151,'True or false.  Calling free on the same address twice is ok.','b','true','false',NULL,NULL,NULL,'False.  You can not call free 2 times on the same address.  This may core dump!',NULL,'free',3,4,13763,8202,152,'Ivan Novick',3),(152,'Which are true about: void *realloc(void *ptr, size_t size);','b','1, 2, 3, 4','1, 2, 3','1, 2','1','none are true','4 is false.  realloc may move your data to a new pointer and free the memory at the old pointer.  It will return the new pointer, or the old pointer if the data is not moved.','1) realloc changes the size of the allocated\r\n    memory pointed to by the argument ptr\r\n\r\n2) newly allocated memory will be uninitialized\r\n\r\n3) you can pass a NULL ptr safely to realloc\r\n\r\n4) realloc will guarantee not to move the data \r\n    pointed to in ptr\r\n','realloc',3,5,13027,6119,153,'Ivan Novick',3),(153,'In general which of the following functions should be faster for sending information to a file?','c','int printf(const char *format, ...);','int fprintf(FILE *stream, const char *format, ...);','ssize_t write(int fd, const void *buf, size_t count);','',NULL,'In general, printf and fprintf should be slower than write.  The printf functions are formatted printing and they have to be parsed where as write is the basic system call which should have less overhead.',NULL,'performance',3,6,12426,6735,154,'Ivan Novick',3),(154,'How many bytes of memory are used to store a long long data type?','e','4 bytes','8 bytes','16 bytes','32 bytes','It is implementation defined','The answer is different on different systems as per the C language specification which allows this.',NULL,'data types',3,7,17856,8197,155,'Ivan Novick',3),(155,'What should the program below print?','a','hello_World','ello_World','llo_World','lo_World','Illegal memory access, undefined behavior','Look at it carefully, the function is not actually modifying the data from main, so the original pointer is unchanged.','#include &lt;stdio.h&gt;\r\n#include &lt;string.h&gt;\r\n#include &lt;stdlib.h&gt;\r\nvoid myfunc(char** param){\r\n    ++param;\r\n}\r\nint main(){\r\n    char* string = (char*)malloc(64);\r\n    strcpy(string, \"hello_World\");\r\n    myfunc(&string);\r\n    myfunc(&string);\r\n    printf(\"%s\\n\", string);\r\n    // ignore memory leak for sake of quiz\r\n    return 0;\r\n}\r\n\r\n','pointers',3,8,14235,7049,156,'Ivan Novick',3),(156,'In theory, which is faster, the call to strcpy or the call to  memcpy?','b','strcpy','memcpy','they should have the same speed',NULL,NULL,'memcpy should be faster because it does not need to check every byte for a NULL, it is copying a known size of data.','#include &lt;string.h&gt;\r\n#include &lt;stdlib.h&gt;\r\nint main(){\r\n\r\n        char msg[12] = \"Hello World\";\r\n        char buffer1[12];\r\n        char buffer2[12];\r\n\r\n        strcpy(buffer1, msg);\r\n        memcpy(buffer2, msg, sizeof(msg));\r\n        return 0;\r\n}\r\n','performance',3,9,9672,6419,164,'Ivan Novick',3),(157,'what does the following code do?','b','defines a list and initializes it','defines a function, which does nothing','defines a function, which passes its parameters through','defines an empty class',NULL,'The \'def\' statement defines a function. The \'pass\' statement is a null operation.','def a(b, c, d): pass','statements: def, pass',6,1,49120,35652,159,'Alexander Saydakov',3),(159,'what is the output of the following code?','e','&lt;class \'tuple\'&gt;','&lt;class \'int\'&gt;','&lt;class \'set\'&gt;','&lt;class \'complex\'&gt;','&lt;class \'list\'&gt;','Lists are formed by placing a comma-separated list of expressions in square brackets','print(type([1,2]))','types',6,2,21761,16492,160,'Alexander Saydakov',3),(160,'what gets printed?','c','&lt;class \'function\'&gt;','&lt;class \'tuple\'&gt;','&lt;class \'NoneType\'&gt;','&lt;class \'str\'&gt;','&lt;class \'type\'&gt;','The argument to the type() call is a return value of a function call, which returns None','def f(): pass\r\nprint(type(f()))\r\n','types',6,3,26203,14227,161,'Alexander Saydakov',3),(161,'what should the below code print?','a','&lt;class \'complex\'&gt;','&lt;class \'unicode\'&gt;','&lt;class \'int\'&gt;','&lt;class \'float\'&gt;','&lt;class \'dict\'&gt;','An imaginary literal yields a complex number with a real part of 0.0','print(type(1J))','types',6,4,20155,13619,162,'Alexander Saydakov',3),(162,'what is the output of the following code?','d','&lt;class \'NoneType\'&gt;','&lt;class \'tuple\'&gt;','&lt;class \'type\'&gt;','&lt;class \'function\'&gt;','&lt;class \'bool\'&gt;','\'lambda arguments: expression\' yields a function object','print(type(lambda:None))','types',6,5,23365,11697,163,'Alexander Saydakov',3),(163,'what is the output of the below program?','d','syntax error','4','5','6','7','The trailing comma in the list is ignored, the rest are legitimate values','a = [1,2,3,None,(),[],]\r\nprint(len(a))','sequences',6,6,22968,13257,176,'Alexander Saydakov',3),(164,'True or False?<br> int32_t is a data type that is guaranteed to be available on all standard conforming C implementations and represents a 32 bit signed integer type?','b','true','false',NULL,NULL,NULL,'This data type is a 32 bit signed integer and available in stdint.h.  HOWEVER: If an implementation does not provide any integer type with 32 bit widths they do not have to define this data type.',NULL,'data types',3,10,8797,5155,165,'Ivan Novick',3),(165,'Which of the following is the correct way to declare a function pointer named pMyFunc that returns an int and has an int parameter?','c','*(int pMyFunc(int));','int ()(int)* pMyFunc;','int (*pMyFunc)(int);','int *pMyFunc (int);','(int *pMyFunc int);','',NULL,'function pointers',3,11,13590,6894,166,'Ivan Novick',3),(166,'For the code below which lines should be reported as errors by a compiler?','b','line 2','line 3','lines 2 and 3','none of the lines',NULL,'foo is a pointer to a const string.  The pointer can be reassigned but the data in the string can not.  Had it been char *const foo; then it would have been a constant pointer to changeable data.','int main(int argc, char** argv){\r\n\r\n  const char* foo = \"wow\";           // line 1\r\n  foo = \"top\";                       // line 2\r\n  foo[0] = 1;                        // line 3\r\n\r\n  return 0;\r\n}\r\n','const',3,12,14199,6351,167,'Ivan Novick',3),(167,'When running the program below, the malloc statement will always be executed?','a','True, the malloc statement will always be executed','False, depending on how ptrToData is initialized in the machine the malloc statement might not get run.',NULL,NULL,NULL,'Variables declared outside of functions or with the static specifier are always initialized to zero.  Therefore this program has deterministic behavior.','#include &lt;stdlib.h&gt;\r\n#include &lt;stdio.h&gt;\r\n\r\nint* ptrToData;\r\n\r\nint main(){\r\n\r\n    if (!ptrToData){\r\n        ptrToData = (int*)malloc(sizeof(int) * 10);\r\n        printf(\"%p\\n\", ptrToData);\r\n    }\r\n\r\n    free(ptrToData);\r\n    return 0;\r\n}\r\n\r\n','variable initialization',3,13,7353,4151,168,'Ivan Novick',3),(168,'What number is output by the program below?  (assuming 8 byte pointers)','b','8','14','16','17','20','6 bytes for the firstname array and 8 bytes for the pointer lastname.','#include &lt;stdio.h&gt;\r\n\r\nint main(){\r\n    const char   firstname[] = \"bobby\";\r\n    const char*  lastname = \"eraserhead\";\r\n    printf(\"%lu\\n\", sizeof(firstname) + \r\n                    sizeof(lastname));\r\n    return 0;\r\n}\r\n\r\n','pointers and arrays',3,14,9156,4312,169,'Ivan Novick',3),(169,'what value should be printed by the program:','e','0','3','5','0x0503','machine dependent','The answer is machine dependent.  On a little endian machine, 3 should be printed on a big endian machine 5 should be printed.  Note:  this is also C implementation dependent in addition to machine dependent.','typedef union ds_{\r\n        short s;\r\n        char c;\r\n} ds;\r\n\r\nds object;\r\nobject.s = 0x0503;\r\nprintf(\"%d\\n\", object.c);\r\n','unions',3,15,6909,4014,170,'Ivan Novick',3),(170,'What value gets printed by the program below?','d','1','2','5','not defined',NULL,'X is a 1 bit bitfield.  Assigning 5 to it is not defined.','struct Foo{\r\n        int x:1;\r\n        int y:2;\r\n};\r\n\r\nstruct Foo obj;\r\n\r\nobj.x = 5;\r\n\r\nprintf(\"%d\\n\", obj.x);','bitfields',3,16,7907,3731,171,'Ivan Novick',3),(171,'What value gets printed by the program below?','a','0','1','3','undefined','machine dependent','31 / 10 is integer division which ignores the remainder and gives result 3.  3 modulus 3 has a result of 0.','int w = 3;\r\nint x = 31;\r\nint y = 10;\r\ndouble z =  x / y % w;\r\nprintf(\"%f\\n\", z);','integer arithmetic',3,17,7532,4165,172,'Ivan Novick',3),(172,'What gets printed by the code below? (Assume 1 byte characters)','b','0','1','2','3','4','It prints the size of a single character which by definition is 1 byte.','char array[] = \"foo\";\r\n\r\nprintf(\"%lu\\n\", sizeof(array[1]));\r\n\r\n','strings',3,18,6801,4853,182,'Ivan Novick',3),(173,'If you have an array of characters allocated with new.  Which of the following is the best way to modify the size of the array?','c','Use the realloc function from libc','Delete the existing array, then allocate a new array and copy the data from the old array to the new array','Allocate a new array, copy the data from old array to the new array and then delete the old array','It is not possible to do such an operation in C++',NULL,'You can not use realloc, because realloc may call free on memory allocated with new which is bad.  You can do the same thing realloc does manually, but make sure not to delete the original array until after copying the data.  Also you may want to check the size of the new array.  If the new array is smaller than the old one, you may not need to do the reallocation depeding on the business logic.',NULL,'memory allocation',4,73,7104,5013,174,'Ivan Novick',3),(174,'What should get printed in the program below?','d','1','2','3','4','undefined','the value of z is initialized to 4.  According the C++ standard: non-static data members shall be initialized in the order they were declared in the class definition, regardless of the order of the mem-initializers.  Therefore x is initialized to 3 before z is initialized to X + 1.','#include &lt;iostream&gt;\r\nusing namespace std;\r\n\r\nclass foo{\r\npublic:\r\n    foo() : z(x+1), y(2), x(3)\r\n    {\r\n        cout << \"z: \" << z << endl;\r\n    }\r\nprivate:\r\n    int x;\r\n    int y;\r\n    int z;\r\n};\r\n\r\nint main(int argc, char** argv){\r\n    foo f;\r\n    return 0;\r\n}\r\n','initializer list',4,74,6386,3307,175,'Ivan Novick',3),(175,'Which of the following implementations of the reset function is best for initializing the array to all zero.','b','A','B','C','D','none of them will work','B is the only answer that is portable.  C will work on platforms where long is 4 bytes, but many platforms have 8 byte long.','class foo{\r\npublic:\r\n    foo(){\r\n        reset();\r\n    }\r\nprivate:\r\n    void reset(){\r\n\r\n    // A // memset(x, 0, 50);\r\n    // B // memset(x, 0, sizeof(x));\r\n    // C // memset(x, 0, 50 * 4);\r\n    // D // memset(x, 0, 50 * sizeof(x));\r\n    }\r\n\r\n    long x[50];\r\n};\r\n','sizeof',4,75,6710,3776,203,'Ivan Novick',3),(176,'what gets printed?','c','&lt;class \'int\'&gt;','&lt;class \'number\'&gt;','&lt;class \'float\'&gt;','&lt;class \'double\'&gt;','&lt;class \'tuple\'&gt;','division of an integer by another integer yields a float','print(type(1/2))','types',6,7,19777,9834,177,'Ivan Novick',3),(177,'What gets printed?','c','7','12','24','36','48','start with 2, multiply by 2, multiply by 3, multipy by 2.','d = lambda p: p * 2\r\nt = lambda p: p * 3\r\nx = 2\r\nx = d(x)\r\nx = t(x)\r\nx = d(x)\r\nprint(x)\r\n','lambda',6,8,13172,10484,178,'Ivan Novick',3),(178,'What gets printed?','a','2.0','2.25','9.0','20.25','21','this is truncating division.  The remainder is dropped.','x = 4.5\r\ny = 2\r\nprint(x//y)\r\n','operators',6,9,16856,10952,179,'Ivan Novick',3),(179,'What gets printed?','c','1','2','4','5','7','nums is a set, so only unique values are retained.','nums = set([1,1,2,3,3,3,4])\r\nprint(len(nums))\r\n','sets',6,10,18681,10428,180,'Ivan Novick',3),(180,'What gets printed?','a','yes','no','fails to compile',NULL,NULL,'AND is higher precedence than OR in python and is evaluated first','x = True\r\ny = False\r\nz = False\r\n\r\nif x or y and z:\r\n    print(\"yes\")\r\nelse:\r\n    print(\"no\")\r\n','operator precedence',6,11,16318,9695,181,'Ivan Novick',3),(181,'What gets printed?','c','1','2','3','4',NULL,'NOT has first precedence, then AND, then OR','x = True\r\ny = False\r\nz = False\r\n\r\nif not x or y:\r\n    print(1)\r\nelif not x or not y and z:\r\n    print(2)\r\nelif not x or y or not y and x:\r\n    print(3)\r\nelse:\r\n    print(4)\r\n','operator precedence',6,12,15201,8225,184,'Ivan Novick',3),(182,'What gets printed?','a','6','7','8','9','10','Note the order of initialization of the members of the array is array[0][0]=0, array[0][1]=1, array[1][0]=2, array[1][1]=3.  And the addition done is SUM = array[0][1]+array[1][0]+array[0][1]+array[1][0]','int array[2][2] = {0, 1, 2, 3};\r\nint i;\r\nint sum = 0;\r\n\r\nfor (i =0; i < 4; ++i){\r\n\r\n    int x, y;\r\n\r\n    x = i % 2;\r\n\r\n    if (x){\r\n        y = 0;\r\n    }\r\n    else{\r\n        y = 1;\r\n    }\r\n    sum += array[x][y];\r\n}\r\n\r\nprintf(\"%d\\n\", sum);','2d arrays',3,19,5977,3741,183,'Ivan Novick',3),(183,'What gets printed?','c','3','5','6','7','9','A single statement is part of an if conditional if no curly braces are used.','int i = 3;\r\n\r\nif (!i)\r\n    i++;\r\n    i++;\r\n\r\nif (i==3)\r\n    i+=2;\r\n    i+=2;\r\n\r\nprintf(\"%d\\n\", i);','conditionals',3,20,10556,4549,202,'Ivan Novick',3),(184,'If PYTHONPATH is set in the environment, which directories are searched for modules?','d','A only','A and D','A, B, and C','A, B, and D','A, B, C, and D','First is the current directory, then is the PYTHONPATH directory if set, then is the installation dependent default path','A) PYTHONPATH directory<br>\r\nB) current directory<br>\r\nC) home directory<br>\r\nD) installation dependent default path','python path',6,13,15048,7316,188,'Ivan Novick',3),(188,'What gets printed?','c','1','3','4','7','none of the above','the counter variable being referenced in the function is the global variable defined outside of the function.  Changes to the variable in the function affect the original variable.','counter = 1 \r\n\r\ndef doLotsOfStuff():\r\n    \r\n    global counter\r\n\r\n    for i in (1, 2, 3): \r\n        counter += 1\r\n\r\ndoLotsOfStuff()\r\n\r\nprint(counter)\r\n','scope',6,14,11742,6337,189,'Ivan Novick',3),(189,'What gets printed?','c','new line then the string: woow','the text exactly like this: r\"\\nwoow\"','the text like exactly like this: \\nwoow','the letter r and then newline then the text: woow','the letter r then the text like this: nwoow','When prefixed with the letter \'r\' or \'R\' a string literal becomes a raw string and the escape sequences such as \\n are not converted.','print(r\"\\nwoow\")','string literals',6,15,11734,6267,191,'Ivan Novick',3),(191,'What gets printed?','e','\\x48\\x49!','4849','4849!','&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;48&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;49!','HI!','\\x is an escape sequence that means the following 2 digits are a hexadicmal number encoding a character.','print(\"\\x48\\x49!\")','string literals',6,16,11754,5960,192,'Ivan Novick',3),(192,'What gets printed?','d','0xA + 0xa','0xA 0xa','14','20','0x20','0xA and 0xa are both hexadecimal integer literals representing the decimal value 10.  Their sum is 20.','print(0xA + 0xa)','integer literals',6,17,8167,5063,193,'Ivan Novick',3),(193,'What gets printed?','e','None None','None 11','11 None','11 11','Error is generated by program','AttributeError: child instance has no attribute \'v1\'.  self.v1 was never created as a variable since the parent __init__ was not explicitly called.','class parent:\r\n    def __init__(self, param):\r\n        self.v1 = param\r\n\r\nclass child(parent):\r\n    def __init__(self, param):\r\n        self.v2 = param\r\n\r\nobj = child(11)\r\nprint(obj.v1 + \" \" + obj.v2)','inheritance',6,18,10167,4535,195,'Ivan Novick',3),(195,'What gets printed?','b','None','123','666','SyntaxError, this program will not run',NULL,'class instantiation automatically calls the __init__ method and passes the object as the self parameter.  123 is assigned to data attribute of the object called id.  The 666 value is not retained in the object as it is not assigned to a data attribute of the class/object.','class Account:\r\n    def __init__(self, id):\r\n        self.id = id\r\n        id = 666 \r\n\r\nacc = Account(123)\r\nprint(acc.id)\r\n','classes',6,19,8293,5154,196,'Ivan Novick',3),(196,'What gets printed?','c','st','sto','to','tor','Syntax Error','This is a slice of a string from index 6 to index 8 not including index 8.  The first character in the string is position 0.','name = \"snow storm\"\r\n\r\nprint(name[6:8])\r\n','string slices',6,20,9490,5366,197,'Ivan Novick',3),(197,'What gets printed?','d','snow storm','snowXstorm','snow Xtorm','ERROR, this code will not run',NULL,'TypeError.  You can not modify the contents of a string','name = \"snow storm\"\r\n\r\nname[5] = \'X\'\r\n\r\nprint(name)\r\n','strings',6,21,8802,4572,198,'Ivan Novick',3),(198,'Which numbers are printed?','c','2, 4, 6','0, 1, 2, 4, 5, 6','0, 1, 4, 5','0, 1, 4, 5, 6, 7, 8, 9','1, 2, 4, 5, 6','If only 1 number is supplied to range it is the end of the range.  The default beginning of a range is 0.  The range will include the beginning of the range and all numbers up to but not including the end of the range.','for i in range(2):\r\n    print(i)\r\n\r\nfor i in range(4,6):\r\n    print(i)\r\n','range',6,22,8709,5495,199,'Ivan Novick',3),(199,'What sequence of numbers is printed?','b','1 2 3','1 2 1 3','1 2 1 3 1 2 1 3','1 1 1 1 2 2 3 3','Syntax Error','The filter will return all items from the list values which return True when passed to the function checkit.  checkit will check if the value is in the set.  Since all the numbers in the set come from the values list, all of the orignal values in the list will return True. ','values = [1, 2, 1, 3]\r\nnums = set(values)\r\n\r\ndef checkit(num):\r\n    if num in nums:\r\n        return True\r\n    else:\r\n        return False\r\n\r\nfor i in  filter(checkit, values):\r\n    print(i)\r\n','filter',6,23,8502,4220,200,'Ivan Novick',3),(200,'What sequence of numbers is printed?','e','2 3 2 4','4 6 4 8','1 1.5 1 2','1 1 1 2','4 9 4 16','map will call the function for each value in the list.  The ** operator in the function raises the parameter to the power of 2.','values = [2, 3, 2, 4]\r\n\r\ndef my_transformation(num):\r\n    return num ** 2\r\n\r\nfor i in  map(my_transformation, values):\r\n    print(i)\r\n','map reduce',6,24,6113,4361,201,'Ivan Novick',3),(201,'What numbers get printed','c','500 300','500 500','600 400','600 600','300 500','pickle will store the state of the account object to file when its value is 400.  After storing the value to file 200 is added and 600 is printed.  After printing 600 the object form file is reloaded from file and printed with a value of 400.','import pickle\r\n\r\nclass account:\r\n	def __init__(self, id, balance):\r\n		self.id = id\r\n		self.balance = balance\r\n	def deposit(self, amount):\r\n		self.balance += amount\r\n	def withdraw(self, amount):\r\n		self.balance -= amount\r\n\r\nmyac = account(\'123\', 100)\r\nmyac.deposit(800)\r\nmyac.withdraw(500)\r\n\r\nfd = open( \"archive\", \"wb\" ) \r\npickle.dump( myac, fd)\r\nfd.close()\r\n\r\nmyac.deposit(200)\r\nprint(myac.balance)\r\n\r\nfd = open( \"archive\", \"rb\" ) \r\nmyac = pickle.load( fd )\r\nfd.close()\r\n\r\nprint(myac.balance)','pickle',6,25,4677,3093,242,'Ivan Novick',3),(202,'What gets printed?','e','4','0','8','NULL','program has a compiler error','According to the C standard this program is invalid because it is missing an expression between the ? and :.  The interesting thing is that there is an extension to the widely used GCC compiler that will make this code compile and the result will be 4.  \"The middle operand in a conditional expression may be omitted. Then if the first operand is nonzero, its value is the value of the conditional expression.\"','printf(\"%d\\n\", 4 ?: 8);','ternary operator',3,21,6356,4107,204,'Ivan Novick',3),(203,'Given the code below what will be the output to stdout?','e','1 2 3 4','0 1 2 3','4 3 2 1','Compiler Error','Undefined behavior','As per the standard section 5.4:  \"Except where noted, the order of evaluation of operands of individual operators and subexpressions of individual expressions, and the order in which side effects take place, is unspecified58) Between the previous and next sequence point a scalar object shall have its stored value modified at most once by the evaluation of an expression. Furthermore, the prior value shall be accessed only to determine the value to be stored. The requirements of this paragraph shall be met for each allowable ordering of the subexpressions of a full expression; otherwise the behavior is undefined.\"','#include &lt;cstdio&gt;\r\n\r\n00 void foo(int v1, int v2, int v3, int v4)\r\n01 {\r\n02    printf(\"%d %d %d %d\\n\",v1,v2,v3,v4);\r\n03 }\r\n04\r\n05 int main()\r\n06 {\r\n07    int lut[] = { 1, 2, 3, 4 };\r\n08    int idx = 0;\r\n09    foo(lut[idx++],lut[idx++],lut[idx++],lut[idx++]);\r\n10    return 0;\r\n11 }','sequence points',4,76,7165,3430,207,'Arash Partow',69),(204,'what gets printed?','b','3','4','5','6','code has undefined behavior','the prefix operator and dereference operator have the same precedence and associate from right to left','#include &lt;stdio.h&gt;\r\n\r\nint main()\r\n{\r\n        int ints[] = { 0, 1, 2, 3 };\r\n        int* i1 = ints + 1;\r\n        int a = ++*i1;\r\n        int b = a + *i1;\r\n        printf(\"%d\\n\", b);\r\n        return 0;\r\n}','operators',3,22,7126,3268,205,'Ivan Novick',3),(205,'What gets printed?','b','10#11','10#15','11#15','15#15','ill-formed syntax','The postfix increment operator has priority over the dereference operator.  In this case the increment is done on the pointer but its value is not changed until the next statement.','#include &lt;stdio.h&gt;\r\n\r\nint main()\r\n{\r\n        int ints[] = { 0, 5, 10, 15 };\r\n        int* i2 = ints + 2;\r\n        int a = *i2++;\r\n        printf(\"%d#%d\\n\", a, *i2);\r\n        return 0;\r\n}','operators',3,23,6126,2899,206,'Ivan Novick',3),(206,'What gets printed?','c','5#6','4#6','4#5','Undefined behavior','Compiler error on line 9','The postfix increment operator has priority over the dereference operator while the prefix operator has the same precedence as the dereference operator.  The dereference operator and the prefix increment associate right to left.','01 #include &lt;stdio.h&gt;\r\n02\r\n03 int main()\r\n04 {\r\n05    int ints[] = { 0, 1, 2, 3 };\r\n06    int* i1 = ints + 1;\r\n07    int* i2 = ints + 2;\r\n08    int a = ++*i1 + *i2++;\r\n09    int b = *++i1 + *i2--;\r\n10    printf(\"%d#%d\", a, b);\r\n11    return 0;\r\n12 }','operators',3,24,5089,2505,295,'Arash Partow',69),(207,'What gets printed?','d','0.1.2.','01.2.D.','011.2.D','0112.D.','Compiler error on line 10','Based on sections 6.4.2 p6 and 6.6.1 p1 of the standard, The first case label to match the given switch condition is executed,furthermore all subsequent cases (including the default case) will be executed until a break, continue, return or end of switch is encountered.  In this case the continue not only exits from the switch but goes directly to the next iteration of the loop.','01 #include &lt;iostream&gt;\r\n02\r\n03 int main()\r\n04 {\r\n05    for (int i = 0; i &lt; 4; ++i)\r\n06    {\r\n07       switch (i)\r\n08       {\r\n09          case 0  : std::cout &lt;&lt; \"0\";\r\n10          case 1  : std::cout &lt;&lt; \"1\"; continue;\r\n11          case 2  : std::cout &lt;&lt; \"2\"; break;\r\n12          default : std::cout &lt;&lt; \"D\"; break;\r\n13       }\r\n14       std::cout &lt;&lt; \".\";\r\n15    }\r\n16    return 0;\r\n17 }','switch statements',4,77,7636,3787,208,'Arash Partow',69),(208,'According to the C++ standard which of the following declarations for the \"main\" function are valid?','d','1, 6, 9','3, 4, 5, 7','1, 4, 8','3, 7, 9','3, 6','According to section 3.6.1 pg2, main must return an int, and must have either no parameters or (int argc ,char* argv[]) as its first set of parameters.  And in section 3.6.1 pg3:  A program that declares main to be inline or static is ill-formed.','1 int main(int argc, char** argv)\r\n2 int main(char** argv, int argc)\r\n3 int main()\r\n4 inline int main(int argc, char* argv[])\r\n5 int main(char* argv[], int argc)\r\n6 void main()\r\n7 int main(int argc, char* argv[])\r\n8 static int main()\r\n9 int main(int argc, char* argv[], char* options[])','main function signature',4,78,7848,3774,209,'Arash Partow',69),(209,'What gets printed by the code below?','d','A','B','AB','Compiler error on line 24','Undefined behavior','The accessibility property of the introduced foo method from the A type is private in the C type, hence it will not be publicly accessible. This is the case regardless of the fact that the A type is publicly derived and the foo method has public accessibility in A type. This is further explained in the C++ standard, section 7.3.3 pg 15 by the following: \"The alias created by the using- declaration has the usual accessibility for a member-declaration.\"','01 #include &lt;iostream&gt;\r\n02\r\n03 class A\r\n04 {\r\n05 public:\r\n06    void foo() const { std::cout &lt;&lt; \"A\"; }\r\n07 };\r\n08\r\n09 class B\r\n11 {\r\n12 public:\r\n13    void foo() const { std::cout &lt;&lt; \"B\"; }\r\n14 };\r\n15\r\n16 class C : public A, public B\r\n17 {\r\n18    using A::foo;\r\n19 };\r\n20\r\n21 int main()\r\n22 {\r\n23    C c;\r\n24    c.foo();\r\n25    return 0;\r\n26 }','access',4,79,7391,3748,0,'Arash Partow',69),(242,'What gets printed by the code snippet below?','b','0','5','5.5','6','6.0','the floor method will return the largest integer value less than or equal to the parameter as a float type.','import math\r\n\r\nprint(math.floor(5.5))\r\n','floor method',6,26,7068,3859,243,'Ivan Novick',3),(243,'What gets printed by the code below?','e','1','2','49','50','51','We have created a member variable named \'age\' by adding it directly the objects dictionary.  The value of \'age\' is initialized to 49.  There are 2 items in the dictionary, \'age\' and \'id\', therefore the sum of the \'age\' value 49 and then size of the dictionary, 2 items, is 51.','class Person:\r\n    def __init__(self, id):\r\n        self.id = id\r\n\r\nobama = Person(100)\r\n\r\nobama.__dict__[\'age\'] = 49\r\n\r\nprint(obama.age + len(obama.__dict__))','classes',6,27,5137,2854,244,'Ivan Novick',3),(244,'What gets printed?','e','foo','foo foo','foo 2','2','An exception is thrown','Python is a strongly typed language.  Once a variable has a type, it must be casted to change the type.  x is a string and y is an integer.  Trying to concatenate them will cause an exception of type TypeError','x = \"foo \"\r\ny = 2\r\nprint(x + y)\r\n','types',6,28,5632,3773,245,'Ivan Novick',3),(245,'What gets printed?','e','simpleFunction','simple','func','funtion','cool','There is a docstring defined for this method, by putting a string on the first line after the start of the function definition.  The docstring can be referenced using the __doc__ attribute of the function.','def simpleFunction():\r\n    \"This is a cool simple function that returns 1\"\r\n    return 1\r\n\r\nprint(simpleFunction.__doc__[10:14])\r\n','docstrings',6,29,4735,3472,246,'Ivan Novick',3),(246,'What does the code below do?','c','Changes the location that the python executable is run from','Changes the current working directory','Adds a new directory to seach for python modules that are imported','Removes all directories for mods','Changes the location where sub-processes are searched for after they are launched','The list sys.path contains, in order, all the directories to be searched when trying to load a module','sys.path.append(\'/root/mods\')','paths',6,30,4967,3151,247,'Ivan Novick',3),(247,'What gets printed?','c','3','7','13','14','15','search will see if the pattern exists anywhere in the string, while match will only check if the pattern exists in the beginning of the string.','import re\r\nsum = 0\r\n\r\npattern = \'back\'\r\nif re.match(pattern, \'backup.txt\'):\r\n    sum += 1\r\nif re.match(pattern, \'text.back\'):\r\n    sum += 2\r\nif re.search(pattern, \'backup.txt\'):\r\n    sum += 4\r\nif re.search(pattern, \'text.back\'):\r\n    sum += 8\r\n\r\nprint(sum)','regex',6,31,6529,2900,248,'Ivan Novick',3),(248,'Which of the following print statements will print all the names in the list on a seperate line','a','print(\"\\n\".join(names))','print(names.join(\"\\n\"))','print(names.concatenate(\"\\n\"))','print(names.append(\"\\n\"))','print(names.join(\"%s\\n\", names))','Only A is valid syntax.\r\n\r\nThere is a join method to string objects which takes an iterable object as parameter and combines the string calling the method in between each item to produce a resulting string.','names = [\'Ramesh\', \'Rajesh\', \'Roger\', \'Ivan\', \'Nico\']\r\n','string methods',6,32,5962,3249,249,'Ivan Novick',3),(249,'True or false?  Code indentation must be 4 spaces when creating a code block?','b','True','False','','','','This is false.  Indentation needs to be consistent. A specific number of spaces used for indentation is not prescribed by the language.','if error:\r\n    # four spaces of indent are used to create the block\r\n    print(msg)','indentation',6,33,4135,2720,250,'Ivan Novick',3),(250,'Assuming the filename for the code below is /usr/lib/python/person.py<br> and the program is run as: <br><code>python /usr/lib/python/person.py</code>\r\n<br><br>\r\nWhat gets printed?','d','Person','getAge','usr.lib.python.person','__main__','An exception is thrown','If the module where the reference to __name__ is made has been imported from another file, then the module name will be in the variable in the form of the filename without the path or file extension.  If the code is being run NOT as the result of an import, the variable will have the special value \"__main__\".','class Person:\r\n    def __init__(self):\r\n        pass\r\n\r\n    def getAge(self):\r\n        print(__name__)\r\n\r\np = Person()\r\np.getAge()\r\n','special variables',6,34,5889,2723,251,'Ivan Novick',3),(251,'What gets printed','b','&lt;class \'set\'&gt;','&lt;class \'dict\'&gt;','&lt;class \'list\'&gt;','&lt;class \'tuple\'&gt;','&lt;class \'object\'&gt;','Curly braces are the syntax for a dictionary declaration','foo = {}\r\nprint(type(foo))\r\n','types',6,35,4283,3244,252,'Ivan Novick',3),(252,'What gets printed?','c','&lt;class \'int\'&gt;','&lt;class \'list\'&gt;','&lt;class \'tuple\'&gt;','&lt;class \'dict\'&gt;','&lt;class \'set\'&gt;','Parentheses are used to initialize a tuple.','foo = (3, 4, 5)\r\nprint(type(foo))\r\n','types',6,36,4229,3100,253,'Ivan Novick',3),(253,'What gets printed?','d','0','1','2','3','4','The len function will return the number of keys in a dictionary.  In this case 3 items have been added to the dictionary.  Note that the key\'s to a dictionary are case sensitive.','country_counter = {}\r\n\r\ndef addone(country):\r\n    if country in country_counter:\r\n        country_counter[country] += 1\r\n    else:\r\n        country_counter[country] = 1\r\n\r\naddone(\'China\')\r\naddone(\'Japan\')\r\naddone(\'china\')\r\n\r\nprint(len(country_counter))','dictionary',6,37,4599,2983,254,'Ivan Novick',3),(254,'What gets printed?','d','1','2','3','4','5','Note that keys to a dictionary can be mixed between strings and integers and they represent different keys.','confusion = {}\r\nconfusion[1] = 1\r\nconfusion[\'1\'] = 2\r\nconfusion[1] += 1\r\n\r\nsum = 0\r\nfor k in confusion:\r\n    sum += confusion[k]\r\n\r\nprint(sum)','dictionary',6,38,4877,2970,255,'Ivan Novick',3),(255,'What gets printed?','c','2','4','6','7','An exception is thrown','Note from python docs: \"if two numbers compare equal (such as 1 and 1.0) then they can be used interchangeably to index the same dictionary entry. (Note however, that since computers store floating-point numbers as approximations it is usually unwise to use them as dictionary keys.)\"','confusion = {}\r\nconfusion[1] = 1\r\nconfusion[\'1\'] = 2\r\nconfusion[1.0] = 4\r\n\r\nsum = 0\r\nfor k in confusion:\r\n    sum += confusion[k]\r\n\r\nprint(sum)','dictionary',6,39,5982,2499,256,'Ivan Novick',3),(256,'What gets printed?','e','1','2','4','7','An exception is thrown','Keys can only be immutable types, so a dictionary can not be used as a key.  In the print statement the dictionary is used as the key instead of the string \'boxes\'.  Had the string been used it would have printed the length of the boxes dictionary which is 2.','boxes = {}\r\njars = {}\r\ncrates = {}\r\n\r\nboxes[\'cereal\'] = 1\r\nboxes[\'candy\'] = 2\r\njars[\'honey\'] = 4\r\ncrates[\'boxes\'] = boxes\r\ncrates[\'jars\'] = jars\r\n\r\nprint(len(crates[boxes]))','dictionary',6,40,5427,2604,257,'Ivan Novick',3),(257,'What gets printed?','e','8','12','24','30','33','Tuples can be used for keys into dictionary.  The tuples can have mixed length and the order of the items in the tuple is considered when comparing the equality of the keys.','numberGames = {}\r\nnumberGames[(1,2,4)] = 8\r\nnumberGames[(4,2,1)] = 10\r\nnumberGames[(1,2)] = 12\r\n\r\nsum = 0\r\nfor k in numberGames:\r\n    sum += numberGames[k]\r\n\r\nprint(len(numberGames) + sum)','dictionary tuple',6,41,4356,2524,258,'Ivan Novick',3),(258,'What gets printed?','a','0','1','2','3','An exception is thrown','after the second line of code, foo is an empty dictionary.  The proper way to actually remove all items from a dictionary is to call the \'clear\' method of the dictionary object','foo = {1:\'1\', 2:\'2\', 3:\'3\'}\r\nfoo = {}\r\nprint(len(foo))\r\n','dictionary',6,42,4115,2779,259,'Ivan Novick',3),(259,'What gets printed?','b','1','2','3','4','An exception is thrown','The del function is used to remove key value pairs from a dictionary.','foo = {1:\'1\', 2:\'2\', 3:\'3\'}\r\ndel foo[1]\r\nfoo[1] = \'10\'\r\ndel foo[2]\r\nprint(len(foo))\r\n','dictionary',6,43,3800,2671,260,'Ivan Novick',3),(260,'What gets printed?','e','A','r','Amir','Dao','o','-1 refers to the last position in a list or the last character in a string.\r\n\r\nIn this case, we are referencing the last character in the last string in the list.','names = [\'Amir\', \'Barry\', \'Chales\', \'Dao\']\r\nprint(names[-1][-1])\r\n','lists',6,44,4100,3084,261,'Ivan Novick',3),(261,'What gets printed?','b','11','12','21','22','33','When assigning names1 to names2, we create a second reference to the same list.  Changes to names2 affect names1.\r\n\r\nWhen assigning the slice of all elements in names1 to names3, we are creating a full copy of names1 which can be modified independently.','names1 = [\'Amir\', \'Barry\', \'Chales\', \'Dao\']\r\nnames2 = names1\r\nnames3 = names1[:]\r\n\r\nnames2[0] = \'Alice\'\r\nnames3[1] = \'Bob\'\r\n\r\nsum = 0\r\nfor ls in (names1, names2, names3):\r\n    if ls[0] == \'Alice\':\r\n        sum += 1\r\n    if ls[1] == \'Bob\':\r\n        sum += 10\r\n\r\nprint(sum)','list references',6,45,4644,2216,262,'Ivan Novick',3),(262,'What gets printed?','e','-1','0','4','Edward','An exception is thrown','If index can not find the specified value in the list an exception is thrown.','names1 = [\'Amir\', \'Barry\', \'Chales\', \'Dao\']\r\n\r\nloc = names1.index(\"Edward\")\r\n\r\nprint(loc)','searching lists',6,46,3639,2469,263,'Ivan Novick',3),(263,'What gets printed?','b','1','2','An exception is thrown','','','the in keyword can be used to search for a value in a list, set, or dict.  In this case the search fails, because the string value is case sensitive.','names1 = [\'Amir\', \'Barry\', \'Chales\', \'Dao\']\r\n\r\nif \'amir\' in names1:\r\n    print(1)\r\nelse:\r\n    print(2)','searching lists',6,47,3418,2555,264,'Ivan Novick',3),(264,'What gets printed?','c','i','a','c','C','An exception is thrown','<a href=\'http://docs.python.org/tutorial/datastructures.html#list-comprehensions\'>List Comprehensions</a> are a shorthand to creating a new list with the all the values in a original list modified by some python expression. ','names1 = [\'Amir\', \'Barry\', \'Chales\', \'Dao\']\r\nnames2 = [name.lower() for name in names1]\r\n\r\nprint(names2[2][0])','list comprehensions',6,48,3642,2565,265,'Ivan Novick',3),(265,'What gets printed?','b','4','5','8','12','An exception is thrown','When a list is passed to the append method of list, the entire list is added as an element of the list.  The lists are not merged.','numbers = [1, 2, 3, 4]\r\n\r\nnumbers.append([5,6,7,8])\r\n\r\nprint(len(numbers))','list methods',6,49,4482,2599,267,'Ivan Novick',3),(267,'Which of the following data structures can be used with the \"in\" operator to check if an item is in the data structure?','d','list','set','dictionary','All of the above','None of the above','The \"in\" operator can be used with all 3 of these data structures.',NULL,'searching',6,50,3491,2488,268,'Ivan Novick',3),(268,'What gets printed?','d','2','4','5','8','An exception is thrown','The + operator appends the elements in each list into a new list','list1 = [1, 2, 3, 4]\r\nlist2 = [5, 6, 7, 8]\r\n\r\nprint(len(list1 + list2))\r\n','list methods',6,51,3406,2638,269,'Ivan Novick',3),(269,'What gets printed?','c','1','4','5','8','An exception is thrown','The list is passed by reference to the function and modifications to the function parameter also affect the original list.','def addItem(listParam):\r\n    listParam += [1]\r\n\r\nmylist = [1, 2, 3, 4]\r\naddItem(mylist)\r\nprint(len(mylist))\r\n','function parameters',6,52,3708,2509,270,'Ivan Novick',3),(270,'What gets printed?','e','1','2','5','7','An exception is thrown','Tuples are immutable and don\'t have an append method.  An exception is thrown in this case.','my_tuple = (1, 2, 3, 4)\r\nmy_tuple.append( (5, 6, 7) )\r\nprint(len(my_tuple))\r\n','tuple methods',6,53,4181,2233,271,'Ivan Novick',3),(271,'What gets printed?','b','1 2','2 1','An exception is thrown','This program has undefined behavior','','This is valid python code.   This is assignment multiple variables at once.  The values in b and a are being assigned to a and b, respectively.','a = 1\r\nb = 2\r\na,b = b,a\r\n\r\noutput = \"{} {}\".format(a, b)\r\nprint(output)\r\n','multiple variable assignment',6,54,3352,2578,272,'Ivan Novick',3),(272,'What gets printed?','a','+++1 and some info+++','+++%s+++','+++1','1','some info','You can assign arbitrary typed information to functions.','def print_header(str):\r\n    print(\"+++\" + str + \"+++\")\r\n\r\n\r\nprint_header.category = 1\r\nprint_header.text = \"some info\"\r\n\r\nprint_header(\"{} and {}\".format(print_header.category, print_header.text))\r\n\r\n','function attributes',6,55,2713,2035,273,'Ivan Novick',3),(273,'What gets printed?','c','&lt;class \'str\'&gt;','&lt;class \'int\'&gt;','&lt;class \'tuple\'&gt;','&lt;class \'list\'&gt;','&lt;class \'dict\'&gt;','param2 aggregates remaining parameters into a tuple.','def dostuff(param1, *param2):\r\n   print(type(param2))\r\n\r\ndostuff(\'apples\', \'bananas\', \'cherry\', \'dates\')\r\n','function arguments',6,56,3574,2181,274,'Ivan Novick',3),(274,'What gets printed?','e','in','&lt;class \'str\'&gt;','&lt;class \'tuple\'&gt;','&lt;class \'list\'&gt;','&lt;class \'dict\'&gt;','param2 aggregates the remaining parameters into a dictionary.','def dostuff(param1, **param2):\r\n   print(type(param2))\r\n\r\n\r\ndostuff(\'capitals\', Arizona=\'Phoenix\',\r\nCalifornia=\'Sacramento\', Texas=\'Austin\')\r\n','function arguments',6,57,2878,2073,275,'Ivan Novick',3),(275,'What gets printed?','b','1','3','6','10','An exception is thrown','*nums will unpack the list into individual elements to be passed to the function.','def myfunc(x, y, z, a):\r\n    print(x + y)\r\n\r\nnums = [1, 2, 3, 4]\r\n\r\nmyfunc(*nums)\r\n','unpacking argument lists',6,58,3387,2230,276,'Ivan Novick',3),(276,'How do you create a package so that the following reference will work?','c','Declare the myparser package in mytools.py','Create an __init__.py in the home dir','Inside the mytools dir create a __init__.py and myparser.py','Create a myparser.py directory inside the mytools directory','This can not be done','In order to create a package create a directory for the package name and then put an __init__.py file in the directory.','p = mytools.myparser.MyParser()','packages',6,59,3633,1862,277,'Ivan Novick',3),(277,'What gets printed?','e','1','2','3','6','7','getattr can be used to get the value of a member variable of an object.  setattr can be used to set it.','class A:\r\n    def __init__(self, a, b, c):\r\n        self.x = a + b + c\r\n\r\na = A(1,2,3)\r\nb = getattr(a, \'x\')\r\nsetattr(a, \'x\', b+1)\r\nprint(a.x)','getattr',6,60,3074,1842,278,'Ivan Novick',3),(278,'What gets printed?','e','2','4','6','8','An exception is thrown','An exception will be thrown when trying to call the __init__ method of the object without any parameters:\r\n\r\nTypeError: __init__() takes exactly 2 arguments (1 given)','class NumFactory:\r\n    def __init__(self, n):\r\n        self.val = n\r\n    def timesTwo(self):\r\n        self.val *= 2\r\n    def plusTwo(self):\r\n        self.val += 2\r\n\r\nf = NumFactory(2)\r\nfor m in dir(f):\r\n    mthd = getattr(f,m)\r\n    if callable(mthd):\r\n        mthd()\r\n\r\nprint(f.val)\r\n','callable',6,61,3309,1936,279,'Ivan Novick',3),(279,'What gets printed?','a','hi','h','None','104105','209','chr is a built in function that converts an ascii code to a 1 letter string.','one = chr(104)\r\ntwo = chr(105)\r\nprint(one + two)\r\n','ascii',6,62,2754,1983,281,'Ivan Novick',3),(281,'What gets printed?','c','2','3','4','6','An exception is thrown','isinstance will return true if the first parameter is an instance of the class type of the second parameter.','x = 1\r\ny = \"2\"\r\nz = 3\r\n\r\nsum = 0\r\nfor i in (x,y,z):\r\n    if isinstance(i, int):\r\n        sum += i\r\nprint(sum)','isinstance',6,63,3214,1844,283,'Ivan Novick',3),(283,'What gets printed?','c','4','5','10','15','An exception is thrown','range(5) produces a list of the numbers 0, 1, 2, 3, 4.<br>\r\nsum will add all the numbers in the list.','x = sum(range(5))\r\nprint(x)\r\n','sum',6,64,3028,2082,285,'Ivan Novick',3),(285,'What gets printed?','d','1','2','7','10','An exception is thrown','Assignment will provide another reference to the same dictionary.  Therefore the change to the original dictionary also is changing the copy.','kvps = { \'1\' : 1, \'2\' : 2 }\r\ntheCopy = kvps\r\n\r\nkvps[\'1\'] = 5\r\n\r\nsum = kvps[\'1\'] + theCopy[\'1\']\r\nprint(sum)','dictionary copy',6,65,2940,2080,286,'Ivan Novick',3),(286,'What gets printed?','c','1','2','6','10','An exception is thrown','The copy method of the dictionary will make a new (shallow) copy of the dictionary so a change to the original in this case does not change the copy.','kvps = { \'1\' : 1, \'2\' : 2 }\r\ntheCopy = kvps.copy()\r\n\r\nkvps[\'1\'] = 5\r\n\r\nsum = kvps[\'1\'] + theCopy[\'1\']\r\nprint(sum)','dictionary copy',6,66,2558,1892,287,'Ivan Novick',3),(287,'What gets printed','d','1','2','6','10','An exception is thrown','The copy method provides a shallow copy therefore the list being held as the value inside the dictionary is the same list in the copy as the original.','aList = [1,2]\r\nbList = [3,4]\r\n\r\nkvps = { \'1\' : aList, \'2\' : bList }\r\ntheCopy = kvps.copy()\r\n\r\nkvps[\'1\'][0] = 5\r\n\r\nsum = kvps[\'1\'][0] + theCopy[\'1\'][0]\r\nprint(sum)','dictionary copy',6,67,3589,1834,288,'Ivan Novick',3),(288,'What gets printed?','c','1','2','6','10','An exception is thrown','A deep copy will copy all the keys and values inside a dictionary.  Therefore the list inside the dictionary are different in the first and second dictionaries of this example.','import copy\r\n\r\naList = [1,2]\r\nbList = [3,4]\r\n\r\nkvps = { \'1\' : aList, \'2\' : bList }\r\ntheCopy = copy.deepcopy(kvps)\r\n\r\nkvps[\'1\'][0] = 5\r\n\r\nsum = kvps[\'1\'][0] + theCopy[\'1\'][0]\r\nprint(sum)','dictionary copy',6,68,2312,1761,289,'Ivan Novick',3),(289,'What gets printed?','c','1','2','6','10','An exception is thrown','Initializing one dictionary from another makes an independent copy, so changing one doesn\'t affect the other one','kvps = { \'1\' : 1, \'2\' : 2 }\r\ntheCopy = dict(kvps)\r\n\r\nkvps[\'1\'] = 5\r\n\r\nsum = kvps[\'1\'] + theCopy[\'1\']\r\nprint(sum)','dictionary copy',6,69,2757,1712,290,'Ivan Novick',3),(290,'What gets printed?','b','15','51','150','An exception is thrown','','the update method of dictionary will update the values that have the same keys as the newData with newData\'s values.','kvps = { \'1\' : 1, \'2\' : 2 , \'3\' : 3, \'4\' : 4, \'5\' : 5}\r\nnewData = { \'1\' : 10, \'3\' : 30 }\r\n\r\nkvps.update(newData)\r\n\r\nx = sum(kvps.values())\r\n\r\nprint(x)','dictionary update',6,70,2265,1845,291,'Ivan Novick',3),(291,'What gets printed assuming the user enters \'foo\' at the prompt?','b','f','foo','Not a number','An exception is thrown',NULL,'foo will be assigned to \'a\' and printed.','a = input(\"#: \")\r\n\r\nprint (a)','input',6,71,3686,2015,358,'Ivan Novick',3),(292,'What will the following code print?','b','123456','561234','564321','132465','641352','In the situation of function static variables, special compiler generated code may be placed in the function that is then executed when the function is first called. This behavior is actually allowed by the C++ standard, an excerpt from section 6.7 (N1095) of the current C++ (C++98):\r\n<br>\r\nThe zero-initialization (8.5) of all local objects with static storage duration (3.7.1) is performed before any other initialization takes place. A local object of POD type (3.9) with static storage duration initialized with constant-expressions is initialized before its block is first entered. An implementation is permitted to perform early initialization of other local objects with static storage duration under the same conditions that an implementation is permitted to statically initialize an object with static storage duration in namespace scope (3.6.2). Otherwise such an object is initialized the first time control passes through its declaration; such an object is considered initialized upon the completion of its initialization.\r\n','00 #include &lt;iostream&gt;\r\n01\r\n02 class AClass\r\n03 {\r\n04 public:\r\n05    AClass(const char* s) { std::cout &lt;&lt; s; }\r\n06 };\r\n07\r\n08 void foo()\r\n09 {\r\n10    static AClass ac1(\"1\");\r\n11    AClass ac2(\"2\");\r\n12 }\r\n13\r\n14 void boo()\r\n15 {\r\n16    static AClass ac3(\"3\");\r\n17    AClass ac4(\"4\");\r\n18 }\r\n19\r\n20 static AClass ac5(\"5\");\r\n21\r\n22 int main()\r\n23 {\r\n24    std::cout &lt;&lt; \"6\";\r\n25    foo();\r\n26    boo();\r\n27    return 0;\r\n28 }','Static variable initialization',14,NULL,0,0,0,'Arash Partow',3),(293,'In C++, when does the life time of an object begin and end?','c','T1 and T4','T1 and T3','T2 and T3','T2 and T4','T3 and T4','','T1 : At the beginning of the constructor\r\nT2 : At the end of the constructor\r\nT3 : At the beginning of the destructor\r\nT4 : At the end of the destructor\r\n','Life time of objects',14,NULL,0,0,0,'Arash Partow',3),(294,'What will the following code print?','c','ABCBAD','ABABCD','ACBACD','ACBABD','ADBACD','','00 #include &lt;cstdio&gt;\r\n01\r\n02 template&lt;typename T&gt;\r\n03 class AType\r\n04 {\r\n05 public:\r\n06    AType(T t)\r\n07    :t_(t)\r\n08    {}\r\n09\r\n10   ~AType()\r\n11    {\r\n12       printf(\"D\");\r\n13    }\r\n14\r\n15    bool operator==(const T& t) const\r\n16    {\r\n17       printf(\"A\");\r\n18       return t == t_;\r\n19    }\r\n20\r\n21    bool operator!=(const T& t) const\r\n22    {\r\n23       printf(\"B\");\r\n24       return (!operator==(t));\r\n25    }\r\n26\r\n27    operator T()\r\n28    {\r\n29       printf(\"C\");\r\n30       return t_;\r\n31    }\r\n32\r\n33 private:\r\n34    T t_;\r\n35 };\r\n36\r\n37 int main()\r\n38 {\r\n39    AType&lt;int&gt; atype(1);\r\n40\r\n41    return (atype == 1) &&\r\n42           (1 == atype) &&\r\n43           (atype != 0) &&\r\n44           (0 != atype);\r\n45 }','Cast conversion operator',14,NULL,3,1,0,'Arash Partow',3),(295,'When running the code below, line 7 that increments y will always be executed at runtime.','b','true','false',NULL,NULL,NULL,'Reference: C99 section 5.1.2.3 Program execution paragraph 3:  \"In the abstract machine, all expressions are evaluated as specified by the semantics. An actual implementation need not evaluate part of an expression if it can deduce that its value is not used and that no needed side effects are produced (including any caused by calling a function or accessing a volatile object).\"','  1 \r\n  2 int main()\r\n  3 {\r\n  4     int x = 0;\r\n  5     int y = 0;\r\n  6     if (!x){\r\n  7        y++;\r\n  8     }\r\n  9     return 0;\r\n 10 }\r\n','conditional execution',3,25,2712,1119,296,'Ivan Novick',3),(296,'What value is returned by function func?','e','0','1','5','infiniti','code has undefined behavior','divide by 0 has undefined behavior and renders this code block undefined','float func(){\r\n   int r = 0, d = 0, i=0;\r\n   for (i; i < 2; i++) {\r\n       r += 5 / d;\r\n   }   \r\n   return r;\r\n}\r\n','floating point division',3,26,3046,2031,0,'Chris Young',3),(297,'What will be printed?','b','0','0.0','0.6666666666666666','1','1.0','2 and 3 are int literals, so the integer division 2 / 3 yields 0, which is implicitly converted to double by widening (4 bytes to 8 bytes)','double value = 2 / 3;\r\nSystem.out.println(value);\r\n','types',5,1,NULL,NULL,298,'Alexander Saydakov',1),(298,'What is the outcome?','d','0','1','0.0','Type mismatch: cannot convert from double to int',NULL,'The (int) cast affects the 2.0 literal only, so the division becomes 2 / 3.0, which results in a double value, which cannot be converted to int without an explicit cast','int value = (int) 2.0 / 3.0;\r\nSystem.out.println(value);\r\n','types',5,2,NULL,NULL,299,'Alexander Saydakov',1),(299,'What is wrong with this code?','c','exception is not declared','more specific exception type must be used in catch','potential resource leak','return must be outside of the try block',NULL,'If an exception is thrown in the try block, an open file can be left behind, which is a resource leak','public String readLine() {\r\n    try {\r\n      BufferedReader br = \r\n         new BufferedReader(new FileReader(\"file.txt\"));\r\n      String line = br.readLine();\r\n      br.close();\r\n      return line;\r\n    } catch (Exception e) {\r\n      throw new RuntimeException(e);\r\n    }\r\n}\r\n','exception handling',5,3,NULL,NULL,300,'Alexander Saydakov',1),(300,'What will be printed?','b','255','-1','NaN','-255','-127','A narrowing conversion of a signed integer to an integral type T simply discards all but the n lowest order bits, where n is the number of bits used to represent type T. This conversion discards all but the lowest 8 bits, all of which are set to 1 (255=0b11111111), which is a two\'s complement representation of -1.','int i = 255;\r\nbyte b = (byte) i;\r\nSystem.out.println(b);','type conversion',5,4,NULL,NULL,301,'Alexander Saydakov',1),(301,'What will be printed?','a','-0.0','0','0.0','-0','NaN','Floating point numbers are stored using the IEEE 754 standard, which has distinct values for 0.0 and -0.0.','double value = -0.0;\r\nSystem.out.println(value);','types',5,5,NULL,NULL,302,'Alexander Saydakov',1),(302,'What will be printed?','a','true','false',NULL,NULL,NULL,'According to the IEEE 754 standard, âˆ’0.0 and +0.0 are distinct values, though they both compare as equal.','boolean value = -0.0 == 0.0;\r\nSystem.out.println(value);','types',5,6,NULL,NULL,303,'Alexander Saydakov',1),(303,'What will be printed?','b','true','false',NULL,NULL,NULL,'According to the Java 8 specification, the equality operator == returns false if either operand is NaN','boolean value = Double.NaN == Double.NaN;\r\nSystem.out.println(value);\r\n','types and operations',5,7,NULL,NULL,304,'Alexander Saydakov',1),(304,'What will be printed?','a','true','false',NULL,NULL,NULL,'According to Java 8 specifications, two distinct floating-point values, except +0.0 and -0.0, are considered unequal by the equality operators. In particular, there is one value representing positive infinity and one value representing negative infinity, each compares equal only to itself, and each compares unequal to all other values.','boolean value = \r\n  Double.POSITIVE_INFINITY == Double.POSITIVE_INFINITY;\r\n\r\nSystem.out.println(value);','types and operations',5,8,NULL,NULL,305,'Alexander Saydakov',1),(305,'What will be printed','c','0','1','-1','2147483647','-2147483647','The value of n >> s is n right-shifted s bit positions with sign extension. \r\n\r\nTwo\'s complement representation of -1 has all bits set to 1, so shifting it to the right with sign extension has no effect.\r\n  \r\nHere is the value of a before the operation: 0xFFFFFFFF.  \r\n\r\nAfter shifting it to the right WITH sign extension it is still: 0xFFFFFFFF','int a = -1;\r\na = a >> 1;\r\nSystem.out.println(a);','types and operations',5,9,NULL,NULL,306,'Alexander Saydakov',1),(306,'What will be printed?','d','-1','1','0','2147483647','-2147483647','The value of n >>> s is n right-shifted s bit positions with zero extension. \r\n\r\nTwo\'s complement representation of -1 has all bits set to 1, so shifting it to the right once with zero extension sets the sign bit to 0, which is the max positive value of 2147483647.','int a = -1;\r\na = a >>> 1;\r\nSystem.out.println(a);\r\n','types and operations',5,10,NULL,NULL,307,'Alexander Saydakov',1),(307,'What will be printed?','c','64','128','-64','-128',NULL,'step 1:\r\nNarrowing conversion of int literal 128 to byte results in -128 (0x80)\r\nstep 2:\r\nb >>>= 1 is equivalent to b = b >>> 1\r\nstep 3:\r\nThe operation is performed on int type, so -128 undergoes a widening conversion, which results in -128 of type int (0xffffff80)\r\nstep 4:\r\nThe right-shifting with zero extension results in 0x7fffffc0\r\nstep 5:\r\nThe assignment of the result to b requires a narrowing conversion, which discards all but the lowest 8 bits (0xc0), which is a two\'s complement representation of -64','byte b = (byte) 128;\r\nb >>>= 1;\r\nSystem.out.println(b);','types and operations',5,11,NULL,NULL,308,'Alexander Saydakov',1),(308,'What will be the result of compiling and executing this code?','c','\"the string is null\"','\"null\"','NullPointerException','compilation error',NULL,'s is null, so calling isEmpty() method on a null object reference will throw the NullPointerException.','String s = null;\r\nif ((s != null) || (!s.isEmpty())) {\r\n  System.out.println(s);\r\n} else {\r\n  System.out.println(\"the string is null\");\r\n}\r\n','expressions and operations',5,12,NULL,NULL,309,'Alexander Saydakov',1),(309,'What will be printed?','b','true','false',NULL,NULL,NULL,'This equality test determines whether or not the two operands refer to the same String object. \r\n\r\nThe result is false if the operands are distinct String objects, even if they contain the same sequence of characters.','String s1 = new String(\"a\");\r\nString s2 = new String(\"a\");\r\n\r\nSystem.out.println(s1 == s2);\r\n','operations',5,13,NULL,NULL,310,'Alexander Saydakov',1),(310,'What will be the result of running this code?','a','output: false false','output: false true false','output: true false true','compilation error','run time error','Conditional operator && doesn\'t evaluate the right side if the left side is false.','public class Test {\r\n\r\n  static boolean printAndReturn(boolean value) {\r\n    System.out.println(value);\r\n    return value;\r\n  }\r\n\r\n  public static void main(String[] args) {\r\n    if (printAndReturn(false) && printAndReturn(true)) {\r\n      System.out.println(true);\r\n    } else {\r\n      System.out.println(false);\r\n    }\r\n  }\r\n\r\n}','expressions and operations',5,14,NULL,NULL,311,'Alexander Saydakov',1),(311,'What will be printed?','d','1','2','4','5','6','This is equivalent of a = a + (++a * a). The left-hand operand is saved before the right-hand operand is evaluated. So this results in 1 + 2 * 2 = 5.','int a = 1;\r\na += ++a * a;\r\nSystem.out.println(a);','types and operations',5,15,NULL,NULL,312,'Alexander Saydakov',1),(312,'What will be printed?','a','true','false',NULL,NULL,NULL,'Compile-time constant expressions of type String are always \"interned\" so as to share unique instances, using the method String.intern','String s1 = \"a\";\r\nString s2 = \"a\";\r\nSystem.out.println(s1 == s2);','types and operations',5,16,NULL,NULL,313,'Alexander Saydakov',1),(313,'What will be printed?','a','a','b','ab',NULL,NULL,'Strings are immutable, so s1 += \"b\" produces a new instance of String, while s2 still referring to the instance containing \"a\".','String s1 = \"a\";\r\nString s2 = s1;\r\ns1 += \"b\";\r\nSystem.out.println(s2);','types and operations',5,17,NULL,NULL,314,'Alexander Saydakov',1),(314,'What will be printed?','c','0','1','-1','10','20','Flipping all bits (one\'s complement) is offset by -1 from the negative value (two\'s complement). \r\n\r\nIn other words, -x equals (~x)+1. Therefore the result is 10 + (-10 - 1) = -1','int a = 10;\r\nSystem.out.println(a + ~a);','types and operations',5,18,NULL,NULL,315,'Alexander Saydakov',1),(315,'Which of the following is true?','a','The code won\'t compile','There will be a run time error','The code will print \"a\"','The code will print \"b\"',NULL,'The code won\'t compile with the error: A is not public in a; cannot be accessed from outside package','package a;\r\nclass A {\r\n  public void foo() {\r\n     System.out.println(\"a\");\r\n  }\r\n}\r\n\r\npackage b;\r\nimport a.A;\r\npublic class B extends A {\r\n  public void foo() {\r\n    System.out.println(\"b\");\r\n  }\r\n\r\n  public static void main(String[] args) {\r\n    new B().foo();\r\n  }\r\n}','classes and packages',5,19,NULL,NULL,316,'Alexander Saydakov',1),(316,'What of following will happen?','a','The code will not compile','There will be a run time error','The code will print 0','The code will print 10',NULL,'The code won\'t compile with error: generic array creation','public class A&lt;T&gt; {\r\n\r\n  public void main(String[] args) {\r\n    A&lt;String&gt;[] array = new A&lt;String&gt;[10];\r\n    System.out.println(array.length);\r\n  }\r\n\r\n}\r\n','classes and generics',5,20,NULL,NULL,317,'Alexander Saydakov',1),(317,'Which of the following is true?','b','class C cannot be instantiated because of private constructor','class C cannot be instantiated because it is abstract','method getInstance() cannot be static','there is nothing wrong with this code',NULL,'error: C is abstract; cannot be instantiated','public interface I {\r\n  public void method();\r\n}\r\n\r\npublic abstract class C implements I {\r\n  private C() {\r\n  }\r\n\r\n  public static C getInstance() {\r\n    return new C();\r\n  }\r\n\r\n  public void method() {\r\n  }\r\n}\r\n','classes and interfaces',5,21,NULL,NULL,318,'Alexander Saydakov',1),(318,'Which of the following is true?','d','The code won\'t compile','The code will fail at run time','The code will print \"Base\"','The code will print \"Derived\"',NULL,'There is nothing wrong. The overridden method will be called printing \"Derived\".','public class Base {\r\n  public String toString() {\r\n    return \"Base\";\r\n  }\r\n}\r\n\r\npublic class Derived extends Base {\r\n  public String toString() {\r\n    return \"Derived\";\r\n  }\r\n}\r\n\r\npublic class Main {\r\n  public static void main(String[] args) {\r\n    Base b = new Derived();\r\n    System.out.println(b);\r\n  }\r\n}','classes',5,22,NULL,NULL,319,'Alexander Saydakov',1),(319,'Which of the following is true?','b','The code will print \"a\"','The code will print \"b\"','The code won','The code will fail at run time',NULL,'Nothing is wrong here. The cast to A is unnecessary. \r\n\r\nThe overridden method will be called producing \"b\".','public class A {\r\n  public String foo() {\r\n    return \"a\";\r\n  }\r\n}\r\n\r\npublic class B extends A {\r\n  public String foo() {\r\n    return \"b\";\r\n  }\r\n}\r\n\r\npublic class Main {\r\n  public static void main(String[] args) {\r\n    A a = (A) new B();\r\n    System.out.println(a.foo());\r\n  }\r\n}\r\n','classes',5,23,NULL,NULL,320,'Alexander Saydakov',1),(320,'Which of the following is true?','c','The code will print \"hello\"','The code won\'t compile','The code will fail at run time',NULL,NULL,'The code will fail at run time with error:\r\nMain method is not static in class Main, please define the main method as:\r\npublic static void main(String[] args)\r\n','public final class Main {\r\n\r\n  static final String s = \"hello\";\r\n\r\n  public void main(String[] args) {\r\n    System.out.println(s);\r\n  }\r\n\r\n}','classes and methods',5,24,NULL,NULL,321,'Alexander Saydakov',1),(321,'Which of the following is true?','a','The code will print \"4\"','The code will print \"1234\"','The code won\'t compile','The code will fail at run time',NULL,'\"1234\" is equivalent of new String(\"1234\").intern()','public class Main {\r\n  public static void main(String[] args) {\r\n    System.out.println(\"1234\".length());\r\n  }\r\n}','strings',5,25,NULL,NULL,322,'Alexander Saydakov',1),(322,'Which of the following is true?','c','class cannot be instantiated because of non-public constructor','class cannot be final','class cannot be static','class cannot be named Class because it is a reserved keyword','nothing is wrong with this code','Class.java:5: error: modifier static not allowed here\r\npublic static final class Class {\r\n                    ^\r\n','public static final class Class {\r\n  static final int id = 1;\r\n\r\n  Class() {\r\n  }\r\n\r\n  static public int id() {\r\n    return id;\r\n  }\r\n\r\n}','classes',5,26,NULL,NULL,323,'Alexander Saydakov',1),(323,'Which of the following is true?','d','member variable can not be final','constructor parameter cannot be final','compareTo must take Object as parameter','operator &gt; is not defined for type A','nothing is wrong with this code','The type of each of the operands of a numerical comparison operator must be a type that is convertible to a primitive numeric type, or a compile-time error occurs.','public class A implements Comparable&lt;A&gt; {\r\n\r\n  final int a;\r\n\r\n  A(final int a) {\r\n    this.a = a;\r\n  }\r\n\r\n  public int compareTo(A that) {\r\n    return this.a - that.a;\r\n  }\r\n\r\n  public static void main(String[] args) {\r\n    A a1 = new A(1);\r\n    A a2 = new A(2);\r\n    System.out.println(a1 &gt; a2);\r\n  }\r\n\r\n}\r\n','classes',5,27,NULL,NULL,324,'Alexander Saydakov',1),(324,'which of the following will happen?','e','compile time error: X is not Comparable','run time error: X is not Comparable','compile time error: accessing private member X.x in compare()','output: [1, 2, 3]','output: [3, 2, 1]','Nothing is wrong with the code. The array will be sorted according to the supplied anonymous Comparator in descending order.','import java.util.Arrays;\r\nimport java.util.Comparator;\r\n\r\npublic class X {\r\n\r\n  private int x;\r\n\r\n  public X(int x) {\r\n    this.x = x;\r\n  }\r\n\r\n  public String toString() {\r\n    return Integer.toString(x);\r\n  }\r\n\r\n  public static void main(String[] args) {\r\n    X[] array = new X[3];\r\n    array[0] = new X(3);\r\n    array[1] = new X(1);\r\n    array[2] = new X(2);\r\n\r\n    Arrays.sort(array, new Comparator<X>() {\r\n      public int compare(X x1, X x2) {\r\n        return x2.x - x1.x;\r\n      }\r\n    });\r\n\r\n    System.out.println(Arrays.toString(array));\r\n  }\r\n}\r\n','syntax',5,28,NULL,NULL,343,'Alexander Saydakov',1),(325,'What are possible ways to create a new database in a PostgreSQL system?','e','From psql execute \'NEW DATABASE\'','From psql execute \'CREATE DATABASE\'','Run the command line tool \'createdb\'','Either the first or second option  above','Either the second or third option above','PostgreSQL databases can be created inside the PSQL shell via SQL commands or from the command line tools.  There are a number of command line tools including \'createdb\' which come with PostgreSQL.  From the SQL Commands, \'CREATE DATABASE\' is the syntax.',NULL,'new database',7,1,0,0,326,NULL,1),(326,'True or False?  There can be multiple databases in one schema.','b','True','False',NULL,NULL,NULL,'This is false.  Databases are a higher level construct than Schemas.  There can be multiple schemas defined within a given database.',NULL,'schema',7,2,0,0,327,NULL,1),(327,'What is output by the SQL below?','d','1','2','4','8','16','The code will produce a total of four rows in table foo with the same values in each row 1,2,3.  Column b have the value 2 in each row, and so the query returns the sum of four elements with value 2 which equals 8.','DROP TABLE IF EXISTS foo;\r\nCREATE TABLE foo (a INT, b INT, c INT);\r\nINSERT INTO foo VALUES (1,2,3);\r\nINSERT INTO foo SELECT * FROM foo;\r\nINSERT INTO foo SELECT * FROM foo;\r\nSELECT sum(b) FROM foo;','basic sql',7,3,0,0,328,NULL,1),(328,'What is output by the SQL below?','b','0','2','8','16','NULL','foo.foo and koo.foo are distinctly different tables in different schemas.  Therefore tracing the logic there is only one row in the table foo.foo and the resulting output is the value 2.','DROP SCHEMA IF EXISTS foo CASCADE;\r\nDROP SCHEMA IF EXISTS koo CASCADE;\r\nCREATE SCHEMA foo;\r\nCREATE SCHEMA koo;\r\nCREATE TABLE koo.foo (a INT, b INT, c INT);\r\nCREATE TABLE foo.foo (a INT, b INT, c INT);\r\nINSERT INTO foo.foo VALUES (1,2,3);\r\nINSERT INTO koo.foo SELECT * FROM koo.foo;\r\nINSERT INTO koo.foo SELECT * FROM koo.foo;\r\nSELECT sum(b) FROM foo.foo;','schemas',7,4,0,0,329,NULL,1),(329,'How is the schema search path found in postgresql?','a','show search_path;','show search path;','select * from search_path','select * from paths where name = \'search\'','select search_path from gucs;','search_path is a GUC, and GUCs can be found by using the show command.',NULL,'schema search path',7,5,0,0,331,NULL,1),(331,'Which are valid ways to get a list of databases in an instance?','d','select datname from pg_database;','psql -l','show databases;','The first two options above','All three options above','psql -l is a quick way to get the database list from the command line.\n\nThe \'pg_database\' table is a shared catalog table that contains metadata about all databases.\n\n\'show databases\' is not a valid command in postgresql.',NULL,'list databases',7,6,0,0,332,NULL,1),(332,'Which are valid ways to get a list of schemas in an database?','d','select nspname from pg_namespace;','\\dn','psql -s','The first two options above','All three options above','The \'pg_namespace\' table is a per database catalog table that contains metadata about all schemas in the database.\n\n\'\\dn\' will list all schemas from inside psql shell.\n\n\'psql -s\' is not a valid command to list schemas.',NULL,'list schemas',7,7,0,0,333,NULL,1),(333,'Which are valid ways to get a list of tables in an database?','e','select tablename from pg_tables;','\\dt *.*','select relname, relkind from pg_class where relkind = \'r\';','The first two options above','All three options above','\'pg_tables\' is a catalog view that shows all tables with metadata in a database.\n\n\'\\dt *.*\' will list all tables in all schemas in the current database from the psql shell.\n\n\'pg_class\' is a catalog table that contains infomation about all relations in a postgresql database including tables.  In order to limit to tables only filter on the relkind column.',NULL,'list tables',7,8,0,0,334,NULL,1),(334,'True or False?  After a PostgreSQL database cluster is created the charachter encoding is fixed for the life of the database cluster.','b','true','false',NULL,NULL,NULL,'New databases can be created with a different encoding than the default encoding by specifying the encoding parameter when creating a new database.','initdb --encoding=UTF8','encoding',7,9,0,0,335,NULL,1),(335,'True or False?  After a database is created the charachter encoding is fixed for the life of the database.','a','true','false',NULL,NULL,NULL,'Once a database is created, its encoding can never be changed. Alter database can not change the encoding.','CREATE DATABASE foo ENCODING \'UTF8\'','encoding',7,10,0,0,336,NULL,1),(336,'Which are valid ways to find the encoding parameters of existing databases.','d','select * from pg_database;','psql -l','show pg_encoding;','The first two options above','All three options above','psql -l and select * from pg_database will both show the encoding and locale information which is set at the database level and not changed after database creation.\n\n$ psql -l\n List of databases\n Name           |  Owner   | Encoding | Collate | Ctype |   Access privileges\n --------------------------+----------+----------+---------+-------+-----------------------\n demo                     | postgres | UTF8     | C       | C     |\n postgres                 | postgres | UTF8     | C       | C     |\n template0                | postgres | UTF8     | C       | C     | =c/postgres          +\n |          |          |         |       | postgres=CTc/postgres\n template1                | postgres | UTF8     | C       | C     | =c/postgres          +\n |          |          |         |       | postgres=CTc/postgres',NULL,'encoding',7,11,0,0,337,NULL,1),(337,'Which database(s) are created immediately by the initdb command when a PostgreSQL database cluster is created?','e','template0','template1','postgres','The first two above','All three above','All three are created automatically.\ntemplate0 is never modified and can be used as a template when creating new databases.\ntemplate1 can be modified by the DBA and is used by default as a template when creating new databases.\npostgres is a default database meant for use by users, utilities and third party applications.',NULL,'template dbs',7,12,0,0,338,NULL,1),(338,'True or False?  Checksums are enabled on data pages by default in PostgreSQL','b','true','false',NULL,NULL,NULL,'false.  By default data pages do not have checksums.\nIn order to prevent silent data corruption on disk, checksums should be enabled during initdb with --data-checksums.\nThis setting can not be changed after initdb.',NULL,'data checksums',7,13,0,0,339,NULL,1),(339,'True or False?  The code below will prevent access to the \'demo\' database for all users including super users.','a','true','false',NULL,NULL,NULL,'True\nEven superusers can not connect to \'demo\' after this command.','alter database demo with ALLOW_CONNECTIONS false;','database connections',7,14,0,0,340,NULL,1),(340,'At what level can configuration parameters be set?','e','system','database','role','The first two above','All three above','These are all valid syntax below:\nalter system set log_duration=off;\nalter database demo set log_duration=on;\nalter role george set log_duration=on;',NULL,'configuration parameters',7,15,0,0,341,NULL,1),(341,'What is the command equivalent to psql -l from inside the psql prompt?','e','list','show','show all','show list','\\l','The psql program\'s \\l meta-command is equivalent','$ psql -l\n List of databases\n Name           |  Owner   | Encoding | Collate | Ctype |   Access privileges\n --------------------------+----------+----------+---------+-------+-----------------------\n demo                     | postgres | UTF8     | C       | C     |\n postgres                 | postgres | UTF8     | C       | C     |\n template0                | postgres | UTF8     | C       | C     | =c/postgres          +\n |          |          |         |       | postgres=CTc/postgres\n template1                | postgres | UTF8     | C       | C     | =c/postgres          +\n |          |          |         |       | postgres=CTc/postgres\n (5 rows)\n \n ','database list',7,16,0,0,342,NULL,1),(342,'Assuming the code below was already run by a superuser, what happens when user george tries to create a table in the rawdata schema?','a','table successfully created','george does not have access to the schema','the schema is not found','the table will be accidentaly created in the public schema','george cannot login','\'george\' is a member of the \'engineers\' group.  The \'engineers\' have access to the schema named \'rawdata\' schema, so the operation is successful and the new table is created in the \'rawdata\' schema.','CREATE ROLE engineers;\nCREATE ROLE george WITH LOGIN;\nGRANT engineers TO george;\nGRANT ALL ON SCHEMA rawdata TO engineers;\n','grant role',7,17,0,0,347,NULL,1),(343,'What will be the result of compiling and executing this code?','b','compilation error','NullPointerException','\"the string is null\"','\"null\"',NULL,'Logical operator & always evaluates operands on both sides. The value of s is null, therefore calling isEmpty() method on a null object reference will throw the NullPointerException.','String s = null;\r\nif ((s != null) & (!s.isEmpty())) {\r\n  System.out.println(s);\r\n} else {\r\n  System.out.println(\"the string is null\");\r\n}','operators',5,29,NULL,NULL,344,'Alexander Saydakov',1),(344,'Is the following a valid expression in Java 1.8?','a','yes','no',NULL,NULL,NULL,'This is a valid lambda expression with no parameters and expression body returning double.','java.util.function.Supplier&lt;Double&gt; supplier = () -> 0.0;','lambdas',5,30,NULL,NULL,345,'Alexander Saydakov',1),(345,'Is the following a valid lambda expression in Java 1.8?','b','yes','no',NULL,NULL,NULL,'Only parameters with declared types can have modifiers. Parameter s has inferred type and therefore cannot have the final modifier.','import java.util.function.Consumer;\r\n\r\npublic class X {\r\n  static void process(String str, Consumer&lt;String&gt; consumer) {\r\n    consumer.accept(str);\r\n  }\r\n\r\n  public static void main(String[] args) {\r\n    process(\"a\", (final s) -> System.out.println(s));\r\n  }\r\n}','lambdas',5,31,NULL,NULL,346,'Alexander Saydakov',1),(346,'Is the following a valid lambda expression in Java 1.8?','b','yes','no',NULL,NULL,NULL,'It is not possible for a lambda expression to declare the types of some of its parameters but leave others to be inferred.','import java.util.function.BiConsumer;\r\n\r\npublic class X {\r\n  static void process(String str1, String str2, BiConsumer<String, String> consumer) {\r\n    consumer.accept(str1, str2);\r\n  }\r\n\r\n  public static void main(String[] args) {\r\n    process(\"a\", \"b\", (String s1, s2) -> System.out.println(s1 + s2));\r\n  }\r\n}\r\n','lambdas',5,32,NULL,NULL,351,'Alexander Saydakov',1),(347,'True or False?  A line in pg_hba.conf with only tab characters will be ignored by postgres','a','True','False',NULL,NULL,NULL,'This is true.  Lines in pg_hba with only white space are ignored.',NULL,'pg_hba',7,18,0,0,348,NULL,1),(348,'Which of the following are valid comment symbols in pg_hba.conf?','c','//','/* */','#','All of the above',NULL,'only # is a valid comment character in pg_hba.conf',NULL,'pg_hba',7,19,0,0,349,NULL,1),(349,'True or False?  The last record in the pg_hba.conf file that is a match with the incoming connection will be the one that is used to perform authenticate.','b','True','False',NULL,NULL,NULL,'This is false.  The first record that is a match will the one used to perform authentication.',NULL,'pg_hba',7,20,0,0,350,NULL,1),(350,'True or False?  If authentication fails, the pga_hba.conf file will be searched for the next matching record to attempt the next authentication attempt as fall-through.','b','True','False',NULL,NULL,NULL,'This is false.  Only one authentication attempt will be made and no additional records will be utilized after the first attempt.',NULL,'pg_hba',7,21,0,0,355,NULL,1),(351,'Which of the statements is true about the following code?','d','methods f1 and f2 will compile and work the same way','methods f1 and f2 will compile, but produce different result','method f1 will cause a compile-time error','method f2 will cause a compile-time error','methods f1 and f2 will cause compile-time errors','In f1, result is definitely assigned no matter whether the flag is true or false. However the rules of definite asignment don\'t allow the version in f2.\r\n','public class A {\r\n\r\n  int f1 (boolean flag) {\r\n    int result;\r\n    if (flag) {\r\n      result = 1;\r\n    } else {\r\n      result = 2;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  int f2 (boolean flag) {\r\n    int result;\r\n    if (flag) result = 1;\r\n    if (!flag) result = 2;\r\n    return result;\r\n  }\r\n\r\n}\r\n','definite assignment',5,33,NULL,NULL,352,'Alexander Saydakov',1),(352,'What will be the result?','e','NullPointerException','true and true','true and false','false and true','false and false','According to Java specifications, the result of the instanceof operator is false if the value is null.','String s = null;\r\nSystem.out.println(\"s is an Object: \" + (s instanceof Object));\r\nSystem.out.println(\"s is a String: \" + (s instanceof String));','instanceof',5,34,NULL,NULL,353,'Alexander Saydakov',1),(353,'What will be printed?','a','true','false',NULL,NULL,NULL,'Arrays in Java are covariant, which means that if T1 is a subtype of T2, then T1[] is also a subtype of T2[].','System.out.println(\"String[] is an Object[]: \" + (new String[1] instanceof Object[]));','instanceof',5,35,NULL,NULL,354,'Alexander Saydakov',1),(354,'What will be the result?','c','true','false','compile-time error',NULL,NULL,'It is a compile-time error if the ReferenceType mentioned after the instanceof operator does not denote a reference type that is reifiable. A parameterized type is not reifiable.','class Test {\r\n\r\n  static class A {}\r\n  static class G<T> {}\r\n\r\n  public static void main(String[] args) {\r\n    System.out.println(new G<A>() instanceof G<A>);\r\n  }\r\n\r\n}\r\n','instanceof',5,36,NULL,NULL,368,'Alexander Saydakov',1),(355,'Which of the following is the default isolation level in PostgreSQL?','b','Read Uncommitted','Read Committed','Repeatable Read','Serializable',NULL,'Read Committed is the default isolation level in PostgreSQL',NULL,'isolation level',7,22,0,0,356,NULL,1),(356,'What behavior in PostgreSQL is different between Read Comitted and Read Uncommitted isolation levels?','d','Dirty reads are possible in Read Uncommitted','Phantom reads are possible in Read Uncommitted','Both A and B above','There is no difference',NULL,'PostgreSQL implements Read Uncommitted identically to Read Committed. It is deemed that Reading Uncommitted data does not logically map to PostgreSQL\'s multiversion concurrency control model',NULL,'read uncommitted',7,23,0,0,357,NULL,1),(357,'True or False?  With isolation level Repeatable Read, its possible within the same transaction to re-execute a query with a search condition and find a different set of rows returned.','b','True','False',NULL,NULL,NULL,'This phenomenon is called a Phantom Read. Phantom Reads are not possible in PostgreSQL when using the Repeatable Read isolation level which is the default setting.  However, Phantom Reads are possible in PostgreSQL when setting the isolation level to Read Committed mode',NULL,'phantom reads',7,24,0,0,0,NULL,1),(358,'What gets printed?','c','1','2','3','4','5','Arithmetic operators will be applied to each element in the array and arrays are indexed starting with 0.','import numpy as np\r\n\r\nary = np.array([1,2,3,5,8])\r\n\r\nary = ary + 1\r\n\r\nprint (ary[1])','numpy array add',6,72,0,0,359,NULL,1),(359,'What gets printed?','d','7','12','10','21','28','array wise artithmetic and indexing into the array for printing.','import numpy as np\r\n\r\na = np.array([1,2,3,5,8])\r\nb = np.array([0,3,4,2,1])\r\nc = a + b\r\nc = c*a\r\n\r\nprint (c[2])','numpy array operations',6,73,0,0,360,NULL,1),(360,'What gets printed?','b','0','1','2','3','5','ndim is the number of dimensions in the array and not the number of elements.','import numpy as np\r\n\r\na = np.array([1,2,3,5,8])\r\nprint (a.ndim)','numpy array properties',6,74,0,0,361,NULL,1),(361,'What gets printed?','e','0','1','2','5','6','size is the number of elements in the array.  Different than the number of dimensions','import numpy as np\r\n\r\na = np.array([[1,2,3],[0,1,4]])\r\nprint (a.size)','numpy array properties',6,75,0,0,362,NULL,1),(362,'What gets printed?','c','0','1','5','8','An exception is thrown','zeroes and ones will fill an array of specified dimensions with zeroes and ones respectively','import numpy as np\r\n\r\na = np.array([[1,2,3],[0,1,4]])\r\nb = np.zeros((2,3), dtype=np.int16)\r\nc = np.ones((2,3), dtype=np.int16)\r\nd = a + b + c\r\nprint (d[1,2] )','numpy zeros and ones',6,76,0,0,363,NULL,1),(363,'What gets printed?','c','4','5','13','15','An exception is thrown','arange function goes from first param to 2nd param not inclusive in increments of 3rd param','import numpy as np\r\n\r\na = np.array([1,2,3,4,5])\r\nb = np.arange(0,10,2)\r\nc = a + b\r\nprint (c[4])','numpy array arange',6,77,0,0,364,NULL,1),(364,'What gets printed?','e','0','2','8','10','An exception is thrown','operands could not be broadcast together with different shapes.  An exception is thrown','import numpy as np\r\n\r\na = np.zeros(6)\r\nb = np.arange(0,10,2)\r\nc = a + b\r\nprint (c[4])','numpy array methods',6,78,0,0,365,NULL,1),(365,'What gets printed?','c','2','8','11','14','An exception is thrown','Bear in mind that += will do an in place update to the values, while b = a+3 does not modify a','import numpy as np\r\n\r\na = np.array([[0, 1, 0], [1, 0, 1]])\r\na += 3\r\nb = a + 3\r\nprint (a[1,2] + b[1,2])','numpy array arithmetic',6,79,0,0,366,NULL,1),(366,'What gets printed?','c','3','12','[3 12]','[3 5 7]','An Exception is thrown','With axis=1, sum will return the sum of each row as an array','import numpy as np\r\n\r\na = np.array([[0, 1, 2], [3, 4, 5]])\r\nb = a.sum(axis=1)\r\nprint (b)','numpy unary operations',6,80,0,0,367,NULL,1),(367,'What gets printed?','e','0','3','9','10','An exception is thrown','The ravel function will flatten the array into 1 dimension.  Therefore indexing into it with 2 dimensions will throw an exception.','import numpy as np\r\n\r\na = np.array([[0, 1, 2], [3, 4, 5]])\r\nb = a.ravel()\r\nprint (b[0,0])','numpy array dimensions',6,81,0,0,0,NULL,1),(368,'What gets printed?','b','0','1','4294967296','-4294967296',NULL,'According to Java specifications for shift operators, if the promoted type of the left-hand operand is int, then only the five lowest-order bits of the right-hand operand are used as the shift distance. Effectively the right-hand operand is masked with 0x1f. Therefore the shift distance actually used is always in the range 0 to 31, inclusive.','public class PowerOfTwo {\r\n\r\n  public static void main(String[] args) {\r\n    System.out.println(powerOfTwo(32));\r\n  }\r\n\r\n  static int powerOfTwo(int power) {\r\n    return 1 << power;\r\n  }\r\n\r\n}','types and operations',5,37,NULL,NULL,369,'Alexander Saydakov',1),(369,'Will this code compile and run successfully?','c','Yes','Run-time error','Compile time error, exception IOException has already been caught','FileNotFoundException not handled',NULL,'IOException inherits from Exception, so the catch block for IOException will never be reached and the compile will fail','try{\r\n    File file = new File(\"book.txt\");\r\n}\r\n catch(Exception e){\r\n    e.printStackTrace();\r\n }\r\ncatch(IOException e){\r\n    e.printStackTrace();\r\n }','Exception Handling',5,38,NULL,NULL,370,'haseeb1283',1),(370,'Which of the following is true about final classes?','a','final classes can not have child classes','final class objects can not be created','final classes are read only and can not be changed','All of the above',NULL,'final classes can not be inherited from in the future.  This is done on purpose for certain security concerns','','final keyword',5,39,NULL,NULL,371,'haseeb1283',1),(371,'What is the error in the above code?','d','variable \'a\' is not initialized','Example constructor return type is not specified','There must be a constructor with no parameters','parent-constructor call must be first statement in constructor',NULL,'The call to super must be first in the constructor','class Thing\r\n{\r\n  public Thing(String s){\r\n  }\r\n}\r\n\r\nclass Example extends Thing\r\n{\r\n  int a;\r\n  public Example(String title){\r\n    a = 0;\r\n    super(title);\r\n  }\r\n}','inheritance',5,40,NULL,NULL,372,'haseeb1283',1),(372,'Which of the following is true about abstract classes?','b','All methods and instance variables must be declared Abstract','An abstract class can not be insantiated','An abstract class can not have sub classes','An abstract class cannot implement interfaces','All of the above','An abstract class can not be directly instantiated, but it can be inherited from and the child class can than be instantiated assuming it is not abstract as well','','absctract classes',5,41,NULL,NULL,373,'haseeb1283',1),(373,'What is the output of the code below?','b','0','A number greater than 0','A number less than 0','true','false','The compare function will return either 0, or a positive or negative number depending on the result of the comparison alphabetically','String a = \"john\";\r\nString b = \"doe\";\r\nSystem.out.println(a.compareTo(b));','string comparison',5,42,NULL,NULL,374,'haseeb1283',1),(374,'What is the output of the following code?','b','infinite loop','12,6,3,1,0','25,12,6,3,1','12,6,3,1',NULL,'Integer division will truncate the float part of the answer, and just return the remaining integer.  the loop starts with printing 12 and completes printing 0','int i = 25;\r\nwhile(i > 0){\r\n  System.out.print((i = i / 2) + \",\");\r\n}','Integer artithmetic',5,43,NULL,NULL,375,'haseeb1283',1),(375,'Which of these statements is true about both Abstract Classes and Interfaces?','c','In both methods can only be declared but can not have a definition','Abstract Classes can only have declared methods, Interfaces can have definitions','Abstract classes can define methods but Interfaces can only delcare methods','The same keyword is used for both Abstract Classes and Interfaces','All of the above','Both abstract classes and interfaces are similar in purpose, to predefine some behavior that needs to yet be fully defined.  However an abstract class can have some implemented methods, whereas an interface just declares the prototypes.','','Abstract Classes and Interfaces',5,44,NULL,NULL,376,'haseeb1283',1),(376,'What is the output of the following code?','c','\'John\'','\' Doe\'','\'Doe\'','\'John \'',NULL,'With only one parameter this method returns a substring starting at the index provided with 0 based indexing','String x = \"John Doe\";\r\nSystem.out.println(\"\'\"+x.substring(5)+\"\'\");','Substrings',5,45,NULL,NULL,377,'haseeb1283',1),(377,'Which of the following is a valid way to create a String object?','d','String a = \"john doe\";','String a = new String(\"john doe\");','String a = b; //while b is variable belonging to class String','All of the above',NULL,'These are all valid String creations','','Substrings',5,46,NULL,NULL,378,'haseeb1283',1),(378,'Which of the following must be true for a method to be overriden','d','method must have a void return type','method name must have same name as class name','method must be delcared private','method must be declared in parent class and not be final','parent class must be an abstract class','Only true statement above is that the method being overwritten needs to be declared in the parent class and can not be final','','Inheritance',5,47,NULL,NULL,379,'haseeb1283',1),(379,'Which statement is true for method overloading?','b','The overloaded method must be declared in the parent class','Multiple methods in same class, same name and return type, different parameters','Method name, return type and paramters must be all same','Methods in parent class are same name and types, but behavior is different in child class','all of the above','Overloading is a distinct concept from overriding.  Overloading is multiple methods in the same class with different arguments but the same name and return type','','Overriding and Overloading',5,48,NULL,NULL,380,'haseeb1283',1),(380,'Which statement(s) below are true about Static Methods','c','static methods are declared outside a class','objects of the class must be created to manipulate static methods','static methods can be called without creating an object by Class name','static methods are only used by sub-classes','all of the above','Static Methods can be called by class name without creating an object','','Static Methods',5,49,NULL,NULL,381,'haseeb1283',1),(381,'For a class to inherit from an abstract class and not be abstract itself, it must do what?','c','override the constructor of the parent class','override all methods of parent class','implement all abstract methods from the parent','overload all abstract methods in parent class','all of the above','All abstract methods in parent must be implemented in child or else child must still be abstract','','Abstract Classes',5,50,NULL,NULL,382,'haseeb1283',1),(382,'What is the output of the following code?','b','NumberFormatException thrown','20','0','Compile-time Error','5','Scanner is a class imported from java.util.Scanner and can be used to process text into tokens','Scanner input = new Scanner(\"5 10 5\");\r\nint result = 0;\r\nwhile(input.hasNext()){\r\n  result += Integer.parseInt(input.next());\r\n}System.out.println(result);','Scanner',5,51,NULL,NULL,383,'haseeb1283',1),(383,'Java allows which type of inheritance','d','single-inheritance','multiple-inheritance through interfaces','multi-level inheritance','all of the above',NULL,'All of these are valid','','Inheritance',5,52,NULL,NULL,384,'haseeb1283',1),(384,'What is printed by the code below?','a','john joe','kohn joe','kohn koe','john koe','john doe','Strings are immutable. Whenever a method is applied to a String object, it always returns a new String object. It doesnt change the original object.','String temp = \"john joe\";\r\nString temp2 = temp.replace(\"j\", \"k\");\r\nSystem.out.println(temp);','Strings',5,53,NULL,NULL,385,'haseeb1283',1),(385,'What does the code below print?','c','quiz.15db9742','quiz.java','this is a testing class','toString(\"this is a testing class\")','Code Compile Fails','The toString method of its class is automatically called when printing an object','public class Quiz{\r\n  public static void main(String[] args){\r\n    System.out.println(new Quiz());\r\n  }\r\n\r\n  public String toString(){\r\n    return \"this is testing class\";\r\n  }\r\n}','Strings and Classes',5,54,NULL,NULL,386,'haseeb1283',1),(386,'What does code below print','d','NumberFormatException','1,2,6,12,20,30','3,5,7,9,11','1,3,6,10,15,21','1,2,3,4,5,6','The Scanner is pulling each next number from the String and adding it to the sum variable and then printing it with a comma trailing','String numbers = \"1 2 3 4 5 6\";\r\nScanner input = new Scanner(numbers);\r\n\r\nint sum = 0;\r\nwhile(input.hasNext())\r\n{\r\n  System.out.print((sum+=Integer.parseInt(input.next()))+\",\");\r\n}','Scanner',5,55,NULL,NULL,387,'haseeb1283',1),(387,'What is printed by code below?','b','12','8','5','4',NULL,'This code uses the for-each loop. It iterates over all elements of a Collection or an array. In this code variable i starts as array.length (4) and then gets incremented array.length times in the loop.','String[] array = {\"1\",\"2\",\"4\",\"5\"};\r\nint i = array.length;\r\nfor(String x : array)i++;\r\nSystem.out.println(i);\r\n','foreach loop',5,56,NULL,NULL,388,'haseeb1283',1),(388,'Every class in Java is a sub-class of what?','b','String Class','Object Class','Java Class','All of the above','None of the above','In Java all classes are directly or indirectly derived from the Object class. If a Class does not extend any other class then it is direct child class of Object.','','Classes and Objects',5,57,NULL,NULL,389,'haseeb1283',1),(389,'What gets printed by code below?','c','0','7','25','Compiliation Error','ArrayIndexOutOfBoundException','This foreach syntax loops through all elements in 2d array','int sum = 0;\r\nint[][] table = {{3,4},{5,6,7}};\r\nfor(int x[] : table){\r\n  for(int y : x){\r\n     sum += y;\r\n  }\r\n}\r\nSystem.out.println(sum);','foreach loop',5,58,NULL,NULL,390,'haseeb1283',1),(390,'What gets printed by code below?','d','infinite loop','0,100','100,0','50,50','51,49','y decreases and x increases until they are both 50 and then the condition fails and the loop ends','int x = 0;\r\nint y = 100;\r\nfor(; x&lt;y; x++,y--);\r\nSystem.out.println(x+\",\"+y);\r\n','for loop, string',5,59,NULL,NULL,391,'haseeb1283',1),(391,'What gets printed by code below?','b','gfea','AEFG','65697071','aefg','syntax error','This code loops through each charachter and prints it after subtracting 32 from the ascii code which converts it to the UPPER CASE version of the charachters which happen to be 32 lower than the lower case','String spell= \"aefg\";\r\nString result = \"\";\r\nfor(int k = 0; k< spell.length(); k++){\r\n  result += Character.toString((char)(spell.charAt(k)-32));\r\n}\r\nSystem.out.println(result);\r\n','charachter codes',5,60,NULL,NULL,392,'haseeb1283',1),(392,'What is the output of below code?','d','compile-time error, invalid switch case','2,','1,','1,2,','exception is thrown','as i=1; so case 1 should be selected and the output should be equal to 1, but there is no break statement after case 1, that is why case 2 will get executed and it will print 1,2,','\nint i, j=1;\r\ni = (j>1)?2:1;\r\nswitch(i) {\r\n  case 3: System.out.print(3+\",\"); break;\r\n  case 1: System.out.print(1+\",\");\r\n  case 2: System.out.print(2+\",\"); break;\r\n}\r\n','Switch Statement',5,61,NULL,NULL,393,'haseeb1283',1),(393,'What is the output of the following code?','a','1','2','4','0','an exception is thrown for duplicate variable','In java, primitive data types are not passed by reference, only objects are passed by reference. so in method change whatever operation to variable i is made, it does not effect the value of i in main method.','int i = 0;\r\npublic static void main(String args[])\r\n{\r\n  int i = 1;\r\n  change(i);\r\n  System.out.println(i);\r\n}\r\npublic static void change(int i)\r\n{\r\n  i = 2;\r\n  i *= 2;\r\n}','Parameters',5,62,NULL,NULL,394,'haseeb1283',1),(394,'What is the output of the following code?','d','odd','even','1','compile-time error','run-time exception','In java, boolean data types only support true or false state.  1 or 0 is not taken as true or false.  This is in contrast to th ebehavior of C and C++.  So this gives a compile time error in Java.','int odd = 1;\r\nif(odd)\r\n{\r\n  System.out.println(\"odd\");\r\n}\r\nelse\r\n{\r\n  System.out.println(\"even\");\r\n}\r\n','boolean',5,63,NULL,NULL,395,'haseeb1283',1),(395,'What is the output of the following code?','a','1','2','3','4','5','statement1 : value of l is assigned to k first then incremented\r\nso variable k = 0\r\nstatement2 : value of k is incremented first then assigned to\r\nvariable n so n = 1\r\nstatement 3: value of n is assigned first to variable m\r\nthen incremented so m = 1','int m,n,k,l=0;\r\nk = l++;\r\nn = ++k;\r\nm = n++;\r\nSystem.out.println(m);\r\n','increment decrement operators',5,64,NULL,NULL,396,'haseeb1283',1),(396,'What is the output of the following code?','c','1','2','0','-1','3','The do-while loop is always executed at least once because the condition is evaluated at the end. So the variable z will be decremented, and the output will be 0','int z = 1;\r\ndo {\r\n  z--;\r\n} while (z > 2);\r\nSystem.out.println(z);\r\n','do while',5,65,NULL,NULL,397,'haseeb1283',1),(397,'What is the output of the following code?','d','Java','JavaException','JavaException,Finally','Exception,Finally','Exception,','Java cannot be converted to integer. so exception will be thrown and it will be caught in catch() clause printing Exception, finally clause is executed regardless of whether exception is thrown or not. so it will print Exception,Finally','try\r\n{\r\n  Integer.parseInt(\"Java\");\r\n}\r\ncatch(Exception e){\r\n  System.out.print(\"Exception,\");\r\n}\r\nfinally\r\n{\r\n  System.out.println( \"Finally\" );\r\n}\r\n','Casting',5,66,NULL,NULL,398,'haseeb1283',1),(398,'What gets printed?','d','1','0','true','false',NULL,'\nvariable b has a value that has space in start and at the end. To remomve these un-neccessary spaces at start and end, we should use a.equals(b.trim()) then result will be true','String a = \"Hello\";\r\nString b = \" Hello \";\r\nSystem.out.println(a.equals(b));\r\n','Strings',5,67,NULL,NULL,399,'haseeb1283',1),(399,'What is the value of salaries[3] after this code runs?','d','30000','20000','40000','10000','0','In while loop each member of the array is assigned the same value that is 10000','int salaries[];\r\nint index = 0;\r\nsalaries = new int[4];\r\nwhile (index < 4)\r\n{\r\n    salaries[index] = 10000;\r\n    index++;\r\n}','Arrays And Loops',5,68,NULL,NULL,400,'haseeb1283',1),(400,'What is the name of collection interface used to maintain mappings of keys to values?','c','set','list','Map','SortedSet','HashFunc','Objects of Map class are used to store objects by generic keys. Keys can be strings, integer or any type. Values can be directly accessed by key rather than searching and comparing one by one',NULL,'Data Structures',5,69,NULL,NULL,401,'haseeb1283',1),(401,'Which of the following is not a Java keyword','a','Integer','new','try','static','for','Integer is a java class. It is not a keyword. It can be used as a variable name. All other options are keywords which cannot be used for purpose of referencing.',NULL,'Keywords',5,70,NULL,NULL,402,'haseeb1283',1),(402,'Which expression can be used to access the last element of an array?','c','array[array.size]','array[array.length]','array[array.length-1]','array[array.length+1]','array[array.size+1]','The index of array starts at 0, so the array containing 5 elements will have last element at index 4. So we can get that index by subtracting 1 from length of array',NULL,'Arrays',5,71,NULL,NULL,403,'haseeb1283',1),(403,'What is the output of the following code?','c','syntax error','Hello World','Hello World 123','true','Run time ArrayException','Hello World is printed once in the loop initialization. Loop condition is always true, so it will never cause exit of loop. At end of each loop iteration variable \'i\' is printed, and in the loop body i is incremented and checked for when its 3 before incrementing, and then it will break out of loop.','int i = 0;\r\nfor(System.out.print(\"Hello World \"); true; System.out.print(i)){\r\n    if(i++ == 3)\r\n         break;\r\n}','Loops',5,72,NULL,NULL,404,'haseeb1283',1),(404,'How would you describe the output from the 2 functions on the object t, below?','d','Same output twice','No output','Exception not handled','Two different outputs for line 7 and line 8',NULL,'the run() and start() methods on a Thread object have different behavior.  run() executes on the main thread and no new thread is created.  start() creates a new thread and executes on the newly created thread.  Therefore the print out of the thread name will be different for the two invocations.','Thread t = new Thread(new Runnable() {\r\n\r\n    @Override\r\n    public void run() {\r\n        System.out.println(Thread.currentThread().getName());\r\n    }\r\n});\r\nt.run();   //line 7\r\nt.start(); //line 8','Threads',5,73,NULL,NULL,405,'haseeb1283',1),(405,'What is the output of the following code?','b','Compilation error, incorrect datatype','[7,5,1]','[7,5]','[7,1,5]','[7.1,5,1]','There are several ways to remove an item from a List.  In this particular method, the first matching element will be removed from the list.  If we use removeAll() method of list, then all matches will be removed','List p = new ArrayList();\r\np.add(7);\r\np.add(1);\r\np.add(5);\r\np.add(1);\r\np.remove(1);\r\nSystem.out.println(p);','List Objects',5,74,NULL,NULL,406,'haseeb1283',1),(406,'Error and Exception are sub-classes of which Java class?','a','Throwable','Static','MainException','SuperException','ExceptionBase','Errors indicate problems that a reasonable application should not try to catch and the best course of action is to terminate.\r\n\r\nExceptions indicate problems that a reasonable application might want to catch e.g I/O operations involving reading and writing files and should be handled by the application. \r\n\r\nBoth Error and Exception are sub-classes of Throwable which indicates the core implementation is similar but they are used in different cases and handled accordingly.',NULL,'Exceptions',5,75,NULL,NULL,407,'haseeb1283',1),(407,'What is the output of the following code?','e','400','20','4','2000','200','In method setNumber, the parameter variable is num, where as the instance variable is num. The Compiler has to decide which variable we are using in the method setNumber. So if we want to use parameter num, we just write it as normal and it will hide the instance variable. This is called variable hinderance. If we want to use the instance variable we use keyword this. So in method setNumber we are multipling the same number by 2. so output is 200.','public class Instance {\r\n    int num = 100;\r\n\r\n    public void setNumber(int num){\r\n        this.num = this.num * 2;\r\n    }\r\n    public void printNumber(){\r\n        System.out.println(num);\r\n    }\r\n    public static void main(String[]args){\r\n        Instance obj = new Instance();\r\n        obj.setNumber(2);\r\n        obj.printNumber();\r\n    }\r\n}','Scope',5,76,NULL,NULL,408,'haseeb1283',1),(408,'Which inteface should be implemented when it is desired to save the state of objects to a byte stream?','a','Serializable','Externalizable','FileStorable','Archivable','Persistable','Serialization is the process of writing the state of an object to a byte stream. This is used when you want to save the state of your program to persistent storage area. The class object to be stored, implements java.io.Serializable in order to perform this operation.',NULL,'Persistance',5,77,NULL,NULL,409,'haseeb1283',1),(409,'What will the code below print?','e','6','5','9','Compiler Syntax Error','UnSupportedOperationException thrown','List returned by Arrays.asList() is a fixed length list which doesn?t allow us to add or remove element from it. add() and remove() method will throw UnSupportedOperationException if used. Whereas the normal List increases or decreases its capacity based on current items in it.','List<Integer> a=Arrays.asList(1,2,3);\r\na.remove(1);\r\na.add(4);\r\nInteger sum = 0;\r\nfor (Integer temp : a) {\r\n    sum += temp;\r\n}\r\nSystem.out.println(sum);\r\n','Lists',5,78,NULL,NULL,410,'haseeb1283',1),(410,'What will be stored in variable a with the following code?','a','Random number between 1 and 15, including 1 and 15','Random number between 1 and 15, including 1, excluding 15','Random number between 1 and 15, excluding 1, including 15','Random number between 1 and 15, excluding 1 and 15','Compiler Syntax Error','Suppose we are generating a simple random number by random.nextInt(15); this will generate a number from 0 to 14 including 0 and 14.  Now we are adding 1 at the end to these numbers. So lower and upper limit will change to 1 and 15 including both numbers.','int a = random.nextInt(15) + 1;\r\n','Random Numbers',5,79,NULL,NULL,411,'haseeb1283',1),(411,'Which of these are valid methods for checking file accessibility?','d','isReadable','isWritable','isExecutable','All of the above','None of the above','FileAccessiblity includes reading, writing, and executing programs.  So this can be done by all 3 methods above provided by java.nio.file which return true or false. These methods take a Path object as a parameter.',NULL,'File Accesibility',5,80,NULL,NULL,412,'haseeb1283',1),(412,'Which constant value is used to ensure the application is terminated upon closing a JFrame window in swing package?','a','JFrame.EXIT_ON_CLOSE','JFrame.DISPOSE_ON_CLOSE','JFrame.CLOSE','All of Above',NULL,'JFrame.EXIT_ON_CLOSE signfies close the application using the System exit method and and make sures that the application is not running in the background. JFrame.DISPOSE_ON_CLOSE closes the windows that is on top but does not terminate the application. There is no such method as JFrame.CLOSE.','JFrame frame = new JFrame();\r\nframe.setDefaultCloseOperation(// //);','Swing JFrame',5,81,NULL,NULL,413,'haseeb1283',1),(413,'What is the output of the following code?','c','0','1','Compilation Error','Runtime Error',NULL,'Unlike C++, static local variables are not allowed in Java. We can only declare these as instance variables to a class.','public static void main(String args[]){\r\n    System.out.println(fun());\r\n}\r\n\r\nstatic int fun() {\r\n    static int x= 0;\r\n    return ++x;\r\n}','Static Variables',5,82,NULL,NULL,414,'haseeb1283',1),(414,'What is the output of the following code?','c','15','small','tiny','huge','22','x is not smaller than 15, so small answer is discarded. Now the second operation is evaluated. Again condition is checked. This time x is smaller than 22, so first answer is taken and that is tiny.','int x=20;\r\nString sup = (x < 15) ? \"small\" : (x < 22)? \"tiny\" : \"huge\";\r\nSystem.out.println(sup);','Ternary Operator',5,83,NULL,NULL,415,'haseeb1283',1),(415,'What is the output of the following code?','b','Class A','Executes with no output','Exception is thrown','Compilation failure',NULL,'In the above main method, the default constructor is called, not the method with void return type. Constructors have no return type, so the above method is not a constructor. The output will not be printed.','public class A{\r\n\r\n    void A(){\r\n        System.out.println(\"Class A\");\r\n    }\r\n\r\n    public static void main(String[] args){\r\n        new A();\r\n    }\r\n}','Constructors',5,84,NULL,NULL,416,'haseeb1283',1),(416,'Which statement is missing marked with MISSING_STATEMENT?','d','import java.io.*','import.java.io.PrintWriter','include java.io.*','No statement is required',NULL,'There is no import required because the PrintWriter class is referenced with full package name so we dont need to import it.','MISSING STATEMENT\r\n\r\npublic class foo\r\n{\r\n    public static void main(String[]args)throws Exception\r\n    {\r\n        java.io.PrintWriter out = new java.io.PrintWriter(System.out);\r\n        new java.io.OutputStreamWriter(System.out);\r\n        out.println(\"Hello\");\r\n     }\r\n}','Scope',5,85,NULL,NULL,417,'haseeb1283',1),(417,'What is the output of the following code?','e','baz = blue','baz = null','baz =','baz = g','Runtime Exception','We are passing three parameters red, green and blue. So the array length is 3. We are accessing the index 3 which represents 4 memebers in array. That is why program will throw run time exception','public class Test\r\n{\r\n    public static void main (String[] args)\r\n    {\r\n        String foo = args[1];\r\n        String bar = args[2];\r\n        String baz = args[3];\r\n        System.out.println(\"baz = \" + baz);\r\n    }\r\n}\r\n','Command Line Parsing',5,86,NULL,NULL,418,'haseeb1283',1),(418,'Why does the following program shows compile time error in class B declaration Statement?','c','Class A should be declared public','Variable x is not assigned to any other variable','Super class constructor must be called in sub-class','There is no main function','syntax error','In class A, we have overridden the default constructor by declaring a constructor with a parameter, so child class constructor must call that constructor in order for the class to compile.','class A{\r\n    A(int x){}\r\n}\r\n\r\nclass B extends A{\r\n    B(){\r\n    }\r\n}','Inheritance',5,87,NULL,NULL,419,'haseeb1283',1),(419,'What is the output of the following code?','b','0','-1','5 4 3 2 1 0','Compilation Error',NULL,'The printing statement has no connection with the loop statement. Because it ends with the semicolon infront of it. so Console will print one output only. Output cannot be 0 when compiler comes out of loop, because each time te value of a is compared to 0, a decrement is done to variable a value. So when value of a is 0, condition is true, decrement is done to value of variable a and control is shifted outside the loop and prints -1','public class Questions {\r\n    public static void main(String[] args) {\r\n\r\n        int a = 5;\r\n        while(a-- != 0);\r\n        System.out.print(a+\" \");\r\n    }\r\n}','Loops',5,88,NULL,NULL,420,'haseeb1283',1),(420,'What gets printed by the code below?','c','0.0','3.0','Infinity','NaN','A runtime exception is thrown','With floating point division, dividing by zero results in Infinity where as with integer division it would reslt in a Exception being thrown.','public class Questions {\r\n    public static void main(String[] args) {\r\n        double a;\r\n        a = 3.0/0;\r\n        System.out.println(a);\r\n    }\r\n}','Numbers',5,89,NULL,NULL,421,'haseeb1283',1),(421,'What gets printed by the code below?','a','0.0','4.0','Infinity','NaN','A runtime exception is thrown','This is perfectly legal division and results in a floating point 0.0','public class Questions {\r\n    public static void main(String[] args) {\r\n        double b;\r\n        b = 0/4.0;\r\n        System.out.println(b);\r\n    }\r\n}','Numbers',5,90,NULL,NULL,422,'haseeb1283',1),(422,'What is the output of the following code?','d','0','0.0','Infinity','NaN','A runtime exception is thrown','0 divided by 0.0 or 0.0 divided by 0.0 both result in NaN (not a number) in Java.','public class Questions {\r\n    public static void main(String[] args) {\r\n        double c;\r\n        c=0/0.0;\r\n        System.out.println(c);\r\n    }\r\n }','Numbers',5,91,NULL,NULL,423,'haseeb1283',1),(423,'What is the output of this code?','a','iiiii','iiiiiiiiii','0123456789','NaN','None of the above','The loop is set to execute 10 times in the condition part, but we are incrementing the iterator twice in a cycle. First ++i in the loop structure, second last statement of loop body. So the loop will only run 5 times as it is incremented twice a cycle.','char array_variable [] = new char[10];\r\nfor (int i = 0; i < 10; ++i) {\r\n    array_variable[i] = \'i\';\r\n    System.out.print(array_variable[i] + \"\" );\r\n    i++;\r\n}','Loops',5,92,NULL,NULL,424,'haseeb1283',1),(424,'What is the output of this code?','b','iiiii','iiiiiiiiii','0123456789','Infinite Loop','Exception is Thrown','There is no increment operation in the loop, but its ok because there is an increment within the loop at the end so it will loop 10 times and print i each time.','char array_variable [] = new char[10];\r\nfor (int i = 0; i < 10;) {\r\n    array_variable[i] = \'i\';\r\n    System.out.print(array_variable[i] + \"\" );\r\n    i++;\r\n}','Loops',5,93,NULL,NULL,425,'haseeb1283',1),(425,'What is the output of the following code?','b','65','66','98','b','B','Incrementing a character will go to next character which is \'B\'.  Casting as integer will print its ASCII value which is 66.','char z = \'A\';\r\nz++;\r\nSystem.out.print((int)z);\r\n','Charachters',5,94,NULL,NULL,426,'haseeb1283',1),(426,'What is the output of the following code?','c','66','65.0','66.0','NaN','Exception is Thrown','Incrementing a character will go to next character which is \'B\'.  Casting as float will print its ASCII value but casted to floating point.','char z = \'A\';\r\nz++;\r\nSystem.out.print((float)z);\r\n','Charachters',5,95,NULL,NULL,427,'haseeb1283',1),(427,'What is the output of the following code?','e','AAA','BBB','666666','66 66 66','198','Incrementing a character will go to next character which is \'B\'.  Multiplying a character by 3 will give the ascii value times 3.','char z = \'A\';\r\nz++;\r\nSystem.out.print(z*3);\r\n','Charachters',5,96,NULL,NULL,0,'haseeb1283',1);
/*!40000 ALTER TABLE `question` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(64) COLLATE utf8mb4_unicode_ci NOT NULL,
  `password` varchar(256) COLLATE utf8mb4_unicode_ci NOT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `deleted_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users`
--

LOCK TABLES `users` WRITE;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` VALUES (1,'minhtrih','minhtrih',NULL,'2018-10-10 00:31:18',NULL),(2,'nguyennhuanh','minhtrih',NULL,'2018-10-10 21:16:26',NULL);
/*!40000 ALTER TABLE `users` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2019-03-24 11:34:43
